// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ng_message.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Netgo.Library {

  /// <summary>Holder for reflection information generated from ng_message.proto</summary>
  public static partial class NgMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for ng_message.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NgMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBuZ19tZXNzYWdlLnByb3RvEg1OZXRnby5MaWJyYXJ5IswDCgVOR0FueRIS",
            "CghuZ0RvdWJsZRgLIAEoAUgAEhEKB25nRmxvYXQYDCABKAJIABIRCgduZ0lu",
            "dDMyGA0gASgFSAASEQoHbmdJbnQ2NBgOIAEoA0gAEhIKCG5nVWludDMyGA8g",
            "ASgNSAASEgoIbmdVaW50NjQYECABKARIABISCghuZ1NpbnQzMhgRIAEoEUgA",
            "EhIKCG5nU2ludDY0GBIgASgSSAASEwoJbmdGaXhlZDMyGBMgASgHSAASEwoJ",
            "bmdGaXhlZDY0GBQgASgGSAASFAoKbmdTZml4ZWQzMhgVIAEoD0gAEhQKCm5n",
            "U2ZpeGVkNjQYFiABKBBIABIQCgZuZ0Jvb2wYFyABKAhIABISCghuZ1N0cmlu",
            "ZxgYIAEoCUgAEhEKB25nQnl0ZXMYGSABKAxIABItCgluZ1ZlY3RvcjMYHyAB",
            "KAsyGC5OZXRnby5MaWJyYXJ5Lk5HVmVjdG9yM0gAEjMKDG5nUXVhdGVybmlv",
            "bhggIAEoCzIbLk5ldGdvLkxpYnJhcnkuTkdRdWF0ZXJuaW9uSAASKQoHbmdD",
            "b2xvchghIAEoCzIWLk5ldGdvLkxpYnJhcnkuTkdDb2xvckgAQggKBm5nVHlw",
            "ZSJcCg1Db21tb25PcHRpb25zEhgKEHNlbmRUb0NoYW5uZWxJZHMYASADKA0S",
            "MQoMY2FjaGVPcHRpb25zGAIgASgOMhsuTmV0Z28uTGlicmFyeS5DYWNoZU9w",
            "dGlvbnMiNQoQQ3JlYXRlUm9vbVBhcmFtcxIOCgZyb29tSWQYASABKAkSEQoJ",
            "bWF4TnVtYmVyGAIgASgNIlAKGENyZWF0ZVJvb21SZXNwb25zZVBhcmFtcxIT",
            "CgtyZXR1cm5WYWx1ZRgBIAEoDRIPCgdtZXNzYWdlGAIgASgJEg4KBnBlZXJJ",
            "ZBgDIAEoDSIgCg5Kb2luUm9vbVBhcmFtcxIOCgZyb29tSWQYASABKAkiTgoW",
            "Sm9pblJvb21SZXNwb25zZVBhcmFtcxITCgtyZXR1cm5WYWx1ZRgBIAEoDRIP",
            "CgdtZXNzYWdlGAIgASgJEg4KBnBlZXJJZBgDIAEoDSIXChVKb2luUm9vbUZv",
            "cndhcmRQYXJhbXMiOwoWSm9pbk9yQ3JlYXRlUm9vbVBhcmFtcxIOCgZyb29t",
            "SWQYASABKAkSEQoJbWF4TnVtYmVyGAIgASgNIlYKHkpvaW5PckNyZWF0ZVJv",
            "b21SZXNwb25zZVBhcmFtcxITCgtyZXR1cm5WYWx1ZRgBIAEoDRIPCgdtZXNz",
            "YWdlGAIgASgJEg4KBnBlZXJJZBgDIAEoDSIfCh1Kb2luT3JDcmVhdGVSb29t",
            "Rm9yd2FyZFBhcmFtcyIhCg9MZWF2ZVJvb21QYXJhbXMSDgoGcm9vbUlkGAEg",
            "ASgJIk8KF0xlYXZlUm9vbVJlc3BvbnNlUGFyYW1zEhMKC3JldHVyblZhbHVl",
            "GAEgASgNEg8KB21lc3NhZ2UYAiABKAkSDgoGcGVlcklkGAMgASgNIhgKFkxl",
            "YXZlUm9vbUZvcndhcmRQYXJhbXMisgEKCVJQQ1BhcmFtcxItCgdvcHRpb25z",
            "GAEgASgLMhwuTmV0Z28uTGlicmFyeS5Db21tb25PcHRpb25zEigKBnRhcmdl",
            "dBgCIAEoDjIYLk5ldGdvLkxpYnJhcnkuUlBDVGFyZ2V0Eg4KBnZpZXdJRBgD",
            "IAEoDRISCgptZXRob2ROYW1lGAQgASgJEigKCnBhcmFtZXRlcnMYBSADKAsy",
            "FC5OZXRnby5MaWJyYXJ5Lk5HQW55ImAKEFJQQ0ZvcndhcmRQYXJhbXMSDgoG",
            "dmlld0lEGAEgASgNEhIKCm1ldGhvZE5hbWUYAiABKAkSKAoKcGFyYW1ldGVy",
            "cxgDIAMoCzIULk5ldGdvLkxpYnJhcnkuTkdBbnkiLAoJTkdWZWN0b3IzEgkK",
            "AXgYASABKAISCQoBeRgCIAEoAhIJCgF6GAMgASgCIjoKDE5HUXVhdGVybmlv",
            "bhIJCgF4GAEgASgCEgkKAXkYAiABKAISCQoBehgDIAEoAhIJCgF3GAQgASgC",
            "IjUKB05HQ29sb3ISCQoBchgBIAEoAhIJCgFnGAIgASgCEgkKAWIYAyABKAIS",
            "CQoBYRgEIAEoAiLEAQoTSW5zdGFudGlhdGlvblBhcmFtcxItCgdvcHRpb25z",
            "GAEgASgLMhwuTmV0Z28uTGlicmFyeS5Db21tb25PcHRpb25zEhIKCnByZWZh",
            "Yk5hbWUYAiABKAkSKgoIcG9zaXRpb24YAyABKAsyGC5OZXRnby5MaWJyYXJ5",
            "Lk5HVmVjdG9yMxItCghyb3RhdGlvbhgEIAEoCzIbLk5ldGdvLkxpYnJhcnku",
            "TkdRdWF0ZXJuaW9uEg8KB3ZpZXdJRHMYBSADKA0inAEKGkluc3RhbnRpYXRp",
            "b25Gb3J3YXJkUGFyYW1zEhIKCnByZWZhYk5hbWUYASABKAkSKgoIcG9zaXRp",
            "b24YAiABKAsyGC5OZXRnby5MaWJyYXJ5Lk5HVmVjdG9yMxItCghyb3RhdGlv",
            "bhgDIAEoCzIbLk5ldGdvLkxpYnJhcnkuTkdRdWF0ZXJuaW9uEg8KB3ZpZXdJ",
            "RHMYBCADKA0iUAoSVmlld1N5bmNEYXRhUGFyYW1zEg4KBnZpZXdJRBgBIAEo",
            "DRIqCgx2aWV3U3luY0RhdGEYAiADKAsyFC5OZXRnby5MaWJyYXJ5Lk5HQW55",
            "InUKDlZpZXdTeW5jUGFyYW1zEi0KB29wdGlvbnMYASABKAsyHC5OZXRnby5M",
            "aWJyYXJ5LkNvbW1vbk9wdGlvbnMSNAoJdnNkUGFyYW1zGAIgAygLMiEuTmV0",
            "Z28uTGlicmFyeS5WaWV3U3luY0RhdGFQYXJhbXMiTQoVVmlld1N5bmNGb3J3",
            "YXJkUGFyYW1zEjQKCXZzZFBhcmFtcxgBIAMoCzIhLk5ldGdvLkxpYnJhcnku",
            "Vmlld1N5bmNEYXRhUGFyYW1zIpQBChFDdXN0b21FdmVudFBhcmFtcxItCgdv",
            "cHRpb25zGAEgASgLMhwuTmV0Z28uTGlicmFyeS5Db21tb25PcHRpb25zEg8K",
            "B2V2ZW50SUQYAiABKA0SFQoNdGFyZ2V0UGVlcklkcxgDIAMoDRIoCgpjdXN0",
            "b21EYXRhGAQgAygLMhQuTmV0Z28uTGlicmFyeS5OR0FueSJVChhDdXN0b21F",
            "dmVudEZvcndhcmRQYXJhbXMSDwoHZXZlbnRJRBgBIAEoDRIoCgpjdXN0b21E",
            "YXRhGAIgAygLMhQuTmV0Z28uTGlicmFyeS5OR0FueSIwChpTdWJzY3JpYmVN",
            "c2dDaGFubmVsc1BhcmFtcxISCgpjaGFubmVsaWRzGAEgAygNIjIKHFVuU3Vi",
            "c2NyaWJlTXNnQ2hhbm5lbHNQYXJhbXMSEgoKY2hhbm5lbGlkcxgBIAMoDSLR",
            "BAoLU2VuZE1lc3NhZ2USKwoHbXNnVHlwZRgBIAEoDjIaLk5ldGdvLkxpYnJh",
            "cnkuTWVzc2FnZVR5cGUSMQoIY3JQYXJhbXMYAiABKAsyHy5OZXRnby5MaWJy",
            "YXJ5LkNyZWF0ZVJvb21QYXJhbXMSLwoIanJQYXJhbXMYAyABKAsyHS5OZXRn",
            "by5MaWJyYXJ5LkpvaW5Sb29tUGFyYW1zEjkKCmpvY3JQYXJhbXMYBCABKAsy",
            "JS5OZXRnby5MaWJyYXJ5LkpvaW5PckNyZWF0ZVJvb21QYXJhbXMSMAoIbHJQ",
            "YXJhbXMYBSABKAsyHi5OZXRnby5MaWJyYXJ5LkxlYXZlUm9vbVBhcmFtcxIr",
            "CglycGNQYXJhbXMYBiABKAsyGC5OZXRnby5MaWJyYXJ5LlJQQ1BhcmFtcxIz",
            "CgdpUGFyYW1zGAcgASgLMiIuTmV0Z28uTGlicmFyeS5JbnN0YW50aWF0aW9u",
            "UGFyYW1zEi8KCHZzUGFyYW1zGAggASgLMh0uTmV0Z28uTGlicmFyeS5WaWV3",
            "U3luY1BhcmFtcxIyCghjZVBhcmFtcxgJIAEoCzIgLk5ldGdvLkxpYnJhcnku",
            "Q3VzdG9tRXZlbnRQYXJhbXMSPAoJc21jUGFyYW1zGAogASgLMikuTmV0Z28u",
            "TGlicmFyeS5TdWJzY3JpYmVNc2dDaGFubmVsc1BhcmFtcxI/Cgp1c21jUGFy",
            "YW1zGAsgASgLMisuTmV0Z28uTGlicmFyeS5VblN1YnNjcmliZU1zZ0NoYW5u",
            "ZWxzUGFyYW1zIksKG1Jlc3BvbnNlU29ja2V0U3RhdHVzTWVzc2FnZRIsCgdz",
            "U3RhdHVzGAEgASgOMhsuTmV0Z28uTGlicmFyeS5Tb2NrZXRTdGF0dXMivAIK",
            "GFJlc3BvbnNlT3BlcmF0aW9uTWVzc2FnZRIrCgdtc2dUeXBlGAEgASgOMhou",
            "TmV0Z28uTGlicmFyeS5NZXNzYWdlVHlwZRI6CgljcnJQYXJhbXMYAiABKAsy",
            "Jy5OZXRnby5MaWJyYXJ5LkNyZWF0ZVJvb21SZXNwb25zZVBhcmFtcxI4Cglq",
            "cnJQYXJhbXMYAyABKAsyJS5OZXRnby5MaWJyYXJ5LkpvaW5Sb29tUmVzcG9u",
            "c2VQYXJhbXMSQgoLam9jcnJQYXJhbXMYBCABKAsyLS5OZXRnby5MaWJyYXJ5",
            "LkpvaW5PckNyZWF0ZVJvb21SZXNwb25zZVBhcmFtcxI5CglscnJQYXJhbXMY",
            "BSABKAsyJi5OZXRnby5MaWJyYXJ5LkxlYXZlUm9vbVJlc3BvbnNlUGFyYW1z",
            "IucDCg5Gb3J3YXJkTWVzc2FnZRIrCgdtc2dUeXBlGAEgASgOMhouTmV0Z28u",
            "TGlicmFyeS5NZXNzYWdlVHlwZRIOCgZwZWVySWQYAiABKA0SNwoJanJmUGFy",
            "YW1zGAMgASgLMiQuTmV0Z28uTGlicmFyeS5Kb2luUm9vbUZvcndhcmRQYXJh",
            "bXMSQQoLam9jcmZQYXJhbXMYBCABKAsyLC5OZXRnby5MaWJyYXJ5LkpvaW5P",
            "ckNyZWF0ZVJvb21Gb3J3YXJkUGFyYW1zEjgKCWxyZlBhcmFtcxgFIAEoCzIl",
            "Lk5ldGdvLkxpYnJhcnkuTGVhdmVSb29tRm9yd2FyZFBhcmFtcxIxCghyZlBh",
            "cmFtcxgGIAEoCzIfLk5ldGdvLkxpYnJhcnkuUlBDRm9yd2FyZFBhcmFtcxI7",
            "CghpZlBhcmFtcxgHIAEoCzIpLk5ldGdvLkxpYnJhcnkuSW5zdGFudGlhdGlv",
            "bkZvcndhcmRQYXJhbXMSNwoJdnNmUGFyYW1zGAggASgLMiQuTmV0Z28uTGli",
            "cmFyeS5WaWV3U3luY0ZvcndhcmRQYXJhbXMSOQoIY2VQYXJhbXMYCSABKAsy",
            "Jy5OZXRnby5MaWJyYXJ5LkN1c3RvbUV2ZW50Rm9yd2FyZFBhcmFtcyLsAQoO",
            "UmVjZWl2ZU1lc3NhZ2USOQoOcmVjZWl2ZU1zZ1R5cGUYASABKA4yIS5OZXRn",
            "by5MaWJyYXJ5LlJlY2VpdmVNZXNzYWdlVHlwZRI6CgZyc3NNc2cYAiABKAsy",
            "Ki5OZXRnby5MaWJyYXJ5LlJlc3BvbnNlU29ja2V0U3RhdHVzTWVzc2FnZRI2",
            "CgVyb01zZxgDIAEoCzInLk5ldGdvLkxpYnJhcnkuUmVzcG9uc2VPcGVyYXRp",
            "b25NZXNzYWdlEisKBGZNc2cYBCABKAsyHS5OZXRnby5MaWJyYXJ5LkZvcndh",
            "cmRNZXNzYWdlKuABCgtNZXNzYWdlVHlwZRINCglKb2luTG9iYnkQABIOCgpM",
            "ZWF2ZUxvYmJ5EAESDgoKQ3JlYXRlUm9vbRACEgwKCEpvaW5Sb29tEAMSFAoQ",
            "Sm9pbk9yQ3JlYXRlUm9vbRAEEg0KCUxlYXZlUm9vbRAFEgcKA1JQQxAGEhEK",
            "DUluc3RhbnRpYXRpb24QBxIMCghWaWV3U3luYxAIEg8KC0N1c3RvbUV2ZW50",
            "EAkSGAoUU3Vic2NyaWJlTXNnQ2hhbm5lbHMQChIaChZVblN1YnNjcmliZU1z",
            "Z0NoYW5uZWxzEAsqOwoMQ2FjaGVPcHRpb25zEhIKDkFkZFRvUm9vbUNhY2hl",
            "EAASFwoTUmVtb3ZlRnJvbVJvb21DYWNoZRABKiAKCVJQQ1RhcmdldBIHCgNB",
            "bGwQABIKCgZPdGhlcnMQASovCgxTb2NrZXRTdGF0dXMSEAoMRGlzY29ubmVj",
            "dGVkEAASDQoJQ29ubmVjdGVkEAEqUgoSUmVjZWl2ZU1lc3NhZ2VUeXBlEhgK",
            "FFJlc3BvbnNlU29ja2V0U3RhdHVzEAASFQoRUmVzcG9uc2VPcGVyYXRpb24Q",
            "ARILCgdGb3J3YXJkEAJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Netgo.Library.MessageType), typeof(global::Netgo.Library.CacheOptions), typeof(global::Netgo.Library.RPCTarget), typeof(global::Netgo.Library.SocketStatus), typeof(global::Netgo.Library.ReceiveMessageType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.NGAny), global::Netgo.Library.NGAny.Parser, new[]{ "NgDouble", "NgFloat", "NgInt32", "NgInt64", "NgUint32", "NgUint64", "NgSint32", "NgSint64", "NgFixed32", "NgFixed64", "NgSfixed32", "NgSfixed64", "NgBool", "NgString", "NgBytes", "NgVector3", "NgQuaternion", "NgColor" }, new[]{ "NgType" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.CommonOptions), global::Netgo.Library.CommonOptions.Parser, new[]{ "SendToChannelIds", "CacheOptions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.CreateRoomParams), global::Netgo.Library.CreateRoomParams.Parser, new[]{ "RoomId", "MaxNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.CreateRoomResponseParams), global::Netgo.Library.CreateRoomResponseParams.Parser, new[]{ "ReturnValue", "Message", "PeerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.JoinRoomParams), global::Netgo.Library.JoinRoomParams.Parser, new[]{ "RoomId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.JoinRoomResponseParams), global::Netgo.Library.JoinRoomResponseParams.Parser, new[]{ "ReturnValue", "Message", "PeerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.JoinRoomForwardParams), global::Netgo.Library.JoinRoomForwardParams.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.JoinOrCreateRoomParams), global::Netgo.Library.JoinOrCreateRoomParams.Parser, new[]{ "RoomId", "MaxNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.JoinOrCreateRoomResponseParams), global::Netgo.Library.JoinOrCreateRoomResponseParams.Parser, new[]{ "ReturnValue", "Message", "PeerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.JoinOrCreateRoomForwardParams), global::Netgo.Library.JoinOrCreateRoomForwardParams.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.LeaveRoomParams), global::Netgo.Library.LeaveRoomParams.Parser, new[]{ "RoomId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.LeaveRoomResponseParams), global::Netgo.Library.LeaveRoomResponseParams.Parser, new[]{ "ReturnValue", "Message", "PeerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.LeaveRoomForwardParams), global::Netgo.Library.LeaveRoomForwardParams.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.RPCParams), global::Netgo.Library.RPCParams.Parser, new[]{ "Options", "Target", "ViewID", "MethodName", "Parameters" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.RPCForwardParams), global::Netgo.Library.RPCForwardParams.Parser, new[]{ "ViewID", "MethodName", "Parameters" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.NGVector3), global::Netgo.Library.NGVector3.Parser, new[]{ "X", "Y", "Z" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.NGQuaternion), global::Netgo.Library.NGQuaternion.Parser, new[]{ "X", "Y", "Z", "W" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.NGColor), global::Netgo.Library.NGColor.Parser, new[]{ "R", "G", "B", "A" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.InstantiationParams), global::Netgo.Library.InstantiationParams.Parser, new[]{ "Options", "PrefabName", "Position", "Rotation", "ViewIDs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.InstantiationForwardParams), global::Netgo.Library.InstantiationForwardParams.Parser, new[]{ "PrefabName", "Position", "Rotation", "ViewIDs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.ViewSyncDataParams), global::Netgo.Library.ViewSyncDataParams.Parser, new[]{ "ViewID", "ViewSyncData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.ViewSyncParams), global::Netgo.Library.ViewSyncParams.Parser, new[]{ "Options", "VsdParams" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.ViewSyncForwardParams), global::Netgo.Library.ViewSyncForwardParams.Parser, new[]{ "VsdParams" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.CustomEventParams), global::Netgo.Library.CustomEventParams.Parser, new[]{ "Options", "EventID", "TargetPeerIds", "CustomData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.CustomEventForwardParams), global::Netgo.Library.CustomEventForwardParams.Parser, new[]{ "EventID", "CustomData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.SubscribeMsgChannelsParams), global::Netgo.Library.SubscribeMsgChannelsParams.Parser, new[]{ "Channelids" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.UnSubscribeMsgChannelsParams), global::Netgo.Library.UnSubscribeMsgChannelsParams.Parser, new[]{ "Channelids" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.SendMessage), global::Netgo.Library.SendMessage.Parser, new[]{ "MsgType", "CrParams", "JrParams", "JocrParams", "LrParams", "RpcParams", "IParams", "VsParams", "CeParams", "SmcParams", "UsmcParams" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.ResponseSocketStatusMessage), global::Netgo.Library.ResponseSocketStatusMessage.Parser, new[]{ "SStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.ResponseOperationMessage), global::Netgo.Library.ResponseOperationMessage.Parser, new[]{ "MsgType", "CrrParams", "JrrParams", "JocrrParams", "LrrParams" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.ForwardMessage), global::Netgo.Library.ForwardMessage.Parser, new[]{ "MsgType", "PeerId", "JrfParams", "JocrfParams", "LrfParams", "RfParams", "IfParams", "VsfParams", "CeParams" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netgo.Library.ReceiveMessage), global::Netgo.Library.ReceiveMessage.Parser, new[]{ "ReceiveMsgType", "RssMsg", "RoMsg", "FMsg" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MessageType {
    [pbr::OriginalName("JoinLobby")] JoinLobby = 0,
    [pbr::OriginalName("LeaveLobby")] LeaveLobby = 1,
    [pbr::OriginalName("CreateRoom")] CreateRoom = 2,
    [pbr::OriginalName("JoinRoom")] JoinRoom = 3,
    [pbr::OriginalName("JoinOrCreateRoom")] JoinOrCreateRoom = 4,
    [pbr::OriginalName("LeaveRoom")] LeaveRoom = 5,
    [pbr::OriginalName("RPC")] Rpc = 6,
    [pbr::OriginalName("Instantiation")] Instantiation = 7,
    [pbr::OriginalName("ViewSync")] ViewSync = 8,
    [pbr::OriginalName("CustomEvent")] CustomEvent = 9,
    [pbr::OriginalName("SubscribeMsgChannels")] SubscribeMsgChannels = 10,
    [pbr::OriginalName("UnSubscribeMsgChannels")] UnSubscribeMsgChannels = 11,
  }

  public enum CacheOptions {
    [pbr::OriginalName("AddToRoomCache")] AddToRoomCache = 0,
    [pbr::OriginalName("RemoveFromRoomCache")] RemoveFromRoomCache = 1,
  }

  /// <summary>
  ///event relvelant structs
  /// </summary>
  public enum RPCTarget {
    [pbr::OriginalName("All")] All = 0,
    [pbr::OriginalName("Others")] Others = 1,
  }

  public enum SocketStatus {
    [pbr::OriginalName("Disconnected")] Disconnected = 0,
    [pbr::OriginalName("Connected")] Connected = 1,
  }

  public enum ReceiveMessageType {
    [pbr::OriginalName("ResponseSocketStatus")] ResponseSocketStatus = 0,
    [pbr::OriginalName("ResponseOperation")] ResponseOperation = 1,
    [pbr::OriginalName("Forward")] Forward = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  ///the NGAny is a union,only one type is set 
  /// </summary>
  public sealed partial class NGAny : pb::IMessage<NGAny> {
    private static readonly pb::MessageParser<NGAny> _parser = new pb::MessageParser<NGAny>(() => new NGAny());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NGAny> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NGAny() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NGAny(NGAny other) : this() {
      switch (other.NgTypeCase) {
        case NgTypeOneofCase.NgDouble:
          NgDouble = other.NgDouble;
          break;
        case NgTypeOneofCase.NgFloat:
          NgFloat = other.NgFloat;
          break;
        case NgTypeOneofCase.NgInt32:
          NgInt32 = other.NgInt32;
          break;
        case NgTypeOneofCase.NgInt64:
          NgInt64 = other.NgInt64;
          break;
        case NgTypeOneofCase.NgUint32:
          NgUint32 = other.NgUint32;
          break;
        case NgTypeOneofCase.NgUint64:
          NgUint64 = other.NgUint64;
          break;
        case NgTypeOneofCase.NgSint32:
          NgSint32 = other.NgSint32;
          break;
        case NgTypeOneofCase.NgSint64:
          NgSint64 = other.NgSint64;
          break;
        case NgTypeOneofCase.NgFixed32:
          NgFixed32 = other.NgFixed32;
          break;
        case NgTypeOneofCase.NgFixed64:
          NgFixed64 = other.NgFixed64;
          break;
        case NgTypeOneofCase.NgSfixed32:
          NgSfixed32 = other.NgSfixed32;
          break;
        case NgTypeOneofCase.NgSfixed64:
          NgSfixed64 = other.NgSfixed64;
          break;
        case NgTypeOneofCase.NgBool:
          NgBool = other.NgBool;
          break;
        case NgTypeOneofCase.NgString:
          NgString = other.NgString;
          break;
        case NgTypeOneofCase.NgBytes:
          NgBytes = other.NgBytes;
          break;
        case NgTypeOneofCase.NgVector3:
          NgVector3 = other.NgVector3.Clone();
          break;
        case NgTypeOneofCase.NgQuaternion:
          NgQuaternion = other.NgQuaternion.Clone();
          break;
        case NgTypeOneofCase.NgColor:
          NgColor = other.NgColor.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NGAny Clone() {
      return new NGAny(this);
    }

    /// <summary>Field number for the "ngDouble" field.</summary>
    public const int NgDoubleFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double NgDouble {
      get { return ngTypeCase_ == NgTypeOneofCase.NgDouble ? (double) ngType_ : 0D; }
      set {
        ngType_ = value;
        ngTypeCase_ = NgTypeOneofCase.NgDouble;
      }
    }

    /// <summary>Field number for the "ngFloat" field.</summary>
    public const int NgFloatFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float NgFloat {
      get { return ngTypeCase_ == NgTypeOneofCase.NgFloat ? (float) ngType_ : 0F; }
      set {
        ngType_ = value;
        ngTypeCase_ = NgTypeOneofCase.NgFloat;
      }
    }

    /// <summary>Field number for the "ngInt32" field.</summary>
    public const int NgInt32FieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NgInt32 {
      get { return ngTypeCase_ == NgTypeOneofCase.NgInt32 ? (int) ngType_ : 0; }
      set {
        ngType_ = value;
        ngTypeCase_ = NgTypeOneofCase.NgInt32;
      }
    }

    /// <summary>Field number for the "ngInt64" field.</summary>
    public const int NgInt64FieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NgInt64 {
      get { return ngTypeCase_ == NgTypeOneofCase.NgInt64 ? (long) ngType_ : 0L; }
      set {
        ngType_ = value;
        ngTypeCase_ = NgTypeOneofCase.NgInt64;
      }
    }

    /// <summary>Field number for the "ngUint32" field.</summary>
    public const int NgUint32FieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NgUint32 {
      get { return ngTypeCase_ == NgTypeOneofCase.NgUint32 ? (uint) ngType_ : 0; }
      set {
        ngType_ = value;
        ngTypeCase_ = NgTypeOneofCase.NgUint32;
      }
    }

    /// <summary>Field number for the "ngUint64" field.</summary>
    public const int NgUint64FieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong NgUint64 {
      get { return ngTypeCase_ == NgTypeOneofCase.NgUint64 ? (ulong) ngType_ : 0UL; }
      set {
        ngType_ = value;
        ngTypeCase_ = NgTypeOneofCase.NgUint64;
      }
    }

    /// <summary>Field number for the "ngSint32" field.</summary>
    public const int NgSint32FieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NgSint32 {
      get { return ngTypeCase_ == NgTypeOneofCase.NgSint32 ? (int) ngType_ : 0; }
      set {
        ngType_ = value;
        ngTypeCase_ = NgTypeOneofCase.NgSint32;
      }
    }

    /// <summary>Field number for the "ngSint64" field.</summary>
    public const int NgSint64FieldNumber = 18;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NgSint64 {
      get { return ngTypeCase_ == NgTypeOneofCase.NgSint64 ? (long) ngType_ : 0L; }
      set {
        ngType_ = value;
        ngTypeCase_ = NgTypeOneofCase.NgSint64;
      }
    }

    /// <summary>Field number for the "ngFixed32" field.</summary>
    public const int NgFixed32FieldNumber = 19;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NgFixed32 {
      get { return ngTypeCase_ == NgTypeOneofCase.NgFixed32 ? (uint) ngType_ : 0; }
      set {
        ngType_ = value;
        ngTypeCase_ = NgTypeOneofCase.NgFixed32;
      }
    }

    /// <summary>Field number for the "ngFixed64" field.</summary>
    public const int NgFixed64FieldNumber = 20;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong NgFixed64 {
      get { return ngTypeCase_ == NgTypeOneofCase.NgFixed64 ? (ulong) ngType_ : 0UL; }
      set {
        ngType_ = value;
        ngTypeCase_ = NgTypeOneofCase.NgFixed64;
      }
    }

    /// <summary>Field number for the "ngSfixed32" field.</summary>
    public const int NgSfixed32FieldNumber = 21;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NgSfixed32 {
      get { return ngTypeCase_ == NgTypeOneofCase.NgSfixed32 ? (int) ngType_ : 0; }
      set {
        ngType_ = value;
        ngTypeCase_ = NgTypeOneofCase.NgSfixed32;
      }
    }

    /// <summary>Field number for the "ngSfixed64" field.</summary>
    public const int NgSfixed64FieldNumber = 22;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NgSfixed64 {
      get { return ngTypeCase_ == NgTypeOneofCase.NgSfixed64 ? (long) ngType_ : 0L; }
      set {
        ngType_ = value;
        ngTypeCase_ = NgTypeOneofCase.NgSfixed64;
      }
    }

    /// <summary>Field number for the "ngBool" field.</summary>
    public const int NgBoolFieldNumber = 23;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NgBool {
      get { return ngTypeCase_ == NgTypeOneofCase.NgBool ? (bool) ngType_ : false; }
      set {
        ngType_ = value;
        ngTypeCase_ = NgTypeOneofCase.NgBool;
      }
    }

    /// <summary>Field number for the "ngString" field.</summary>
    public const int NgStringFieldNumber = 24;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NgString {
      get { return ngTypeCase_ == NgTypeOneofCase.NgString ? (string) ngType_ : ""; }
      set {
        ngType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        ngTypeCase_ = NgTypeOneofCase.NgString;
      }
    }

    /// <summary>Field number for the "ngBytes" field.</summary>
    public const int NgBytesFieldNumber = 25;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString NgBytes {
      get { return ngTypeCase_ == NgTypeOneofCase.NgBytes ? (pb::ByteString) ngType_ : pb::ByteString.Empty; }
      set {
        ngType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        ngTypeCase_ = NgTypeOneofCase.NgBytes;
      }
    }

    /// <summary>Field number for the "ngVector3" field.</summary>
    public const int NgVector3FieldNumber = 31;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.NGVector3 NgVector3 {
      get { return ngTypeCase_ == NgTypeOneofCase.NgVector3 ? (global::Netgo.Library.NGVector3) ngType_ : null; }
      set {
        ngType_ = value;
        ngTypeCase_ = value == null ? NgTypeOneofCase.None : NgTypeOneofCase.NgVector3;
      }
    }

    /// <summary>Field number for the "ngQuaternion" field.</summary>
    public const int NgQuaternionFieldNumber = 32;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.NGQuaternion NgQuaternion {
      get { return ngTypeCase_ == NgTypeOneofCase.NgQuaternion ? (global::Netgo.Library.NGQuaternion) ngType_ : null; }
      set {
        ngType_ = value;
        ngTypeCase_ = value == null ? NgTypeOneofCase.None : NgTypeOneofCase.NgQuaternion;
      }
    }

    /// <summary>Field number for the "ngColor" field.</summary>
    public const int NgColorFieldNumber = 33;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.NGColor NgColor {
      get { return ngTypeCase_ == NgTypeOneofCase.NgColor ? (global::Netgo.Library.NGColor) ngType_ : null; }
      set {
        ngType_ = value;
        ngTypeCase_ = value == null ? NgTypeOneofCase.None : NgTypeOneofCase.NgColor;
      }
    }

    private object ngType_;
    /// <summary>Enum of possible cases for the "ngType" oneof.</summary>
    public enum NgTypeOneofCase {
      None = 0,
      NgDouble = 11,
      NgFloat = 12,
      NgInt32 = 13,
      NgInt64 = 14,
      NgUint32 = 15,
      NgUint64 = 16,
      NgSint32 = 17,
      NgSint64 = 18,
      NgFixed32 = 19,
      NgFixed64 = 20,
      NgSfixed32 = 21,
      NgSfixed64 = 22,
      NgBool = 23,
      NgString = 24,
      NgBytes = 25,
      NgVector3 = 31,
      NgQuaternion = 32,
      NgColor = 33,
    }
    private NgTypeOneofCase ngTypeCase_ = NgTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NgTypeOneofCase NgTypeCase {
      get { return ngTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNgType() {
      ngTypeCase_ = NgTypeOneofCase.None;
      ngType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NGAny);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NGAny other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(NgDouble, other.NgDouble)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(NgFloat, other.NgFloat)) return false;
      if (NgInt32 != other.NgInt32) return false;
      if (NgInt64 != other.NgInt64) return false;
      if (NgUint32 != other.NgUint32) return false;
      if (NgUint64 != other.NgUint64) return false;
      if (NgSint32 != other.NgSint32) return false;
      if (NgSint64 != other.NgSint64) return false;
      if (NgFixed32 != other.NgFixed32) return false;
      if (NgFixed64 != other.NgFixed64) return false;
      if (NgSfixed32 != other.NgSfixed32) return false;
      if (NgSfixed64 != other.NgSfixed64) return false;
      if (NgBool != other.NgBool) return false;
      if (NgString != other.NgString) return false;
      if (NgBytes != other.NgBytes) return false;
      if (!object.Equals(NgVector3, other.NgVector3)) return false;
      if (!object.Equals(NgQuaternion, other.NgQuaternion)) return false;
      if (!object.Equals(NgColor, other.NgColor)) return false;
      if (NgTypeCase != other.NgTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ngTypeCase_ == NgTypeOneofCase.NgDouble) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(NgDouble);
      if (ngTypeCase_ == NgTypeOneofCase.NgFloat) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(NgFloat);
      if (ngTypeCase_ == NgTypeOneofCase.NgInt32) hash ^= NgInt32.GetHashCode();
      if (ngTypeCase_ == NgTypeOneofCase.NgInt64) hash ^= NgInt64.GetHashCode();
      if (ngTypeCase_ == NgTypeOneofCase.NgUint32) hash ^= NgUint32.GetHashCode();
      if (ngTypeCase_ == NgTypeOneofCase.NgUint64) hash ^= NgUint64.GetHashCode();
      if (ngTypeCase_ == NgTypeOneofCase.NgSint32) hash ^= NgSint32.GetHashCode();
      if (ngTypeCase_ == NgTypeOneofCase.NgSint64) hash ^= NgSint64.GetHashCode();
      if (ngTypeCase_ == NgTypeOneofCase.NgFixed32) hash ^= NgFixed32.GetHashCode();
      if (ngTypeCase_ == NgTypeOneofCase.NgFixed64) hash ^= NgFixed64.GetHashCode();
      if (ngTypeCase_ == NgTypeOneofCase.NgSfixed32) hash ^= NgSfixed32.GetHashCode();
      if (ngTypeCase_ == NgTypeOneofCase.NgSfixed64) hash ^= NgSfixed64.GetHashCode();
      if (ngTypeCase_ == NgTypeOneofCase.NgBool) hash ^= NgBool.GetHashCode();
      if (ngTypeCase_ == NgTypeOneofCase.NgString) hash ^= NgString.GetHashCode();
      if (ngTypeCase_ == NgTypeOneofCase.NgBytes) hash ^= NgBytes.GetHashCode();
      if (ngTypeCase_ == NgTypeOneofCase.NgVector3) hash ^= NgVector3.GetHashCode();
      if (ngTypeCase_ == NgTypeOneofCase.NgQuaternion) hash ^= NgQuaternion.GetHashCode();
      if (ngTypeCase_ == NgTypeOneofCase.NgColor) hash ^= NgColor.GetHashCode();
      hash ^= (int) ngTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ngTypeCase_ == NgTypeOneofCase.NgDouble) {
        output.WriteRawTag(89);
        output.WriteDouble(NgDouble);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgFloat) {
        output.WriteRawTag(101);
        output.WriteFloat(NgFloat);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgInt32) {
        output.WriteRawTag(104);
        output.WriteInt32(NgInt32);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgInt64) {
        output.WriteRawTag(112);
        output.WriteInt64(NgInt64);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgUint32) {
        output.WriteRawTag(120);
        output.WriteUInt32(NgUint32);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgUint64) {
        output.WriteRawTag(128, 1);
        output.WriteUInt64(NgUint64);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgSint32) {
        output.WriteRawTag(136, 1);
        output.WriteSInt32(NgSint32);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgSint64) {
        output.WriteRawTag(144, 1);
        output.WriteSInt64(NgSint64);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgFixed32) {
        output.WriteRawTag(157, 1);
        output.WriteFixed32(NgFixed32);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgFixed64) {
        output.WriteRawTag(161, 1);
        output.WriteFixed64(NgFixed64);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgSfixed32) {
        output.WriteRawTag(173, 1);
        output.WriteSFixed32(NgSfixed32);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgSfixed64) {
        output.WriteRawTag(177, 1);
        output.WriteSFixed64(NgSfixed64);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgBool) {
        output.WriteRawTag(184, 1);
        output.WriteBool(NgBool);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgString) {
        output.WriteRawTag(194, 1);
        output.WriteString(NgString);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgBytes) {
        output.WriteRawTag(202, 1);
        output.WriteBytes(NgBytes);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgVector3) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(NgVector3);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgQuaternion) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(NgQuaternion);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgColor) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(NgColor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ngTypeCase_ == NgTypeOneofCase.NgDouble) {
        size += 1 + 8;
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgFloat) {
        size += 1 + 4;
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgInt32) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NgInt32);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgInt64) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NgInt64);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgUint32) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NgUint32);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgUint64) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(NgUint64);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgSint32) {
        size += 2 + pb::CodedOutputStream.ComputeSInt32Size(NgSint32);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgSint64) {
        size += 2 + pb::CodedOutputStream.ComputeSInt64Size(NgSint64);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgFixed32) {
        size += 2 + 4;
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgFixed64) {
        size += 2 + 8;
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgSfixed32) {
        size += 2 + 4;
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgSfixed64) {
        size += 2 + 8;
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgBool) {
        size += 2 + 1;
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgString) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(NgString);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgBytes) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(NgBytes);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgVector3) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NgVector3);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgQuaternion) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NgQuaternion);
      }
      if (ngTypeCase_ == NgTypeOneofCase.NgColor) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NgColor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NGAny other) {
      if (other == null) {
        return;
      }
      switch (other.NgTypeCase) {
        case NgTypeOneofCase.NgDouble:
          NgDouble = other.NgDouble;
          break;
        case NgTypeOneofCase.NgFloat:
          NgFloat = other.NgFloat;
          break;
        case NgTypeOneofCase.NgInt32:
          NgInt32 = other.NgInt32;
          break;
        case NgTypeOneofCase.NgInt64:
          NgInt64 = other.NgInt64;
          break;
        case NgTypeOneofCase.NgUint32:
          NgUint32 = other.NgUint32;
          break;
        case NgTypeOneofCase.NgUint64:
          NgUint64 = other.NgUint64;
          break;
        case NgTypeOneofCase.NgSint32:
          NgSint32 = other.NgSint32;
          break;
        case NgTypeOneofCase.NgSint64:
          NgSint64 = other.NgSint64;
          break;
        case NgTypeOneofCase.NgFixed32:
          NgFixed32 = other.NgFixed32;
          break;
        case NgTypeOneofCase.NgFixed64:
          NgFixed64 = other.NgFixed64;
          break;
        case NgTypeOneofCase.NgSfixed32:
          NgSfixed32 = other.NgSfixed32;
          break;
        case NgTypeOneofCase.NgSfixed64:
          NgSfixed64 = other.NgSfixed64;
          break;
        case NgTypeOneofCase.NgBool:
          NgBool = other.NgBool;
          break;
        case NgTypeOneofCase.NgString:
          NgString = other.NgString;
          break;
        case NgTypeOneofCase.NgBytes:
          NgBytes = other.NgBytes;
          break;
        case NgTypeOneofCase.NgVector3:
          if (NgVector3 == null) {
            NgVector3 = new global::Netgo.Library.NGVector3();
          }
          NgVector3.MergeFrom(other.NgVector3);
          break;
        case NgTypeOneofCase.NgQuaternion:
          if (NgQuaternion == null) {
            NgQuaternion = new global::Netgo.Library.NGQuaternion();
          }
          NgQuaternion.MergeFrom(other.NgQuaternion);
          break;
        case NgTypeOneofCase.NgColor:
          if (NgColor == null) {
            NgColor = new global::Netgo.Library.NGColor();
          }
          NgColor.MergeFrom(other.NgColor);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 89: {
            NgDouble = input.ReadDouble();
            break;
          }
          case 101: {
            NgFloat = input.ReadFloat();
            break;
          }
          case 104: {
            NgInt32 = input.ReadInt32();
            break;
          }
          case 112: {
            NgInt64 = input.ReadInt64();
            break;
          }
          case 120: {
            NgUint32 = input.ReadUInt32();
            break;
          }
          case 128: {
            NgUint64 = input.ReadUInt64();
            break;
          }
          case 136: {
            NgSint32 = input.ReadSInt32();
            break;
          }
          case 144: {
            NgSint64 = input.ReadSInt64();
            break;
          }
          case 157: {
            NgFixed32 = input.ReadFixed32();
            break;
          }
          case 161: {
            NgFixed64 = input.ReadFixed64();
            break;
          }
          case 173: {
            NgSfixed32 = input.ReadSFixed32();
            break;
          }
          case 177: {
            NgSfixed64 = input.ReadSFixed64();
            break;
          }
          case 184: {
            NgBool = input.ReadBool();
            break;
          }
          case 194: {
            NgString = input.ReadString();
            break;
          }
          case 202: {
            NgBytes = input.ReadBytes();
            break;
          }
          case 250: {
            global::Netgo.Library.NGVector3 subBuilder = new global::Netgo.Library.NGVector3();
            if (ngTypeCase_ == NgTypeOneofCase.NgVector3) {
              subBuilder.MergeFrom(NgVector3);
            }
            input.ReadMessage(subBuilder);
            NgVector3 = subBuilder;
            break;
          }
          case 258: {
            global::Netgo.Library.NGQuaternion subBuilder = new global::Netgo.Library.NGQuaternion();
            if (ngTypeCase_ == NgTypeOneofCase.NgQuaternion) {
              subBuilder.MergeFrom(NgQuaternion);
            }
            input.ReadMessage(subBuilder);
            NgQuaternion = subBuilder;
            break;
          }
          case 266: {
            global::Netgo.Library.NGColor subBuilder = new global::Netgo.Library.NGColor();
            if (ngTypeCase_ == NgTypeOneofCase.NgColor) {
              subBuilder.MergeFrom(NgColor);
            }
            input.ReadMessage(subBuilder);
            NgColor = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommonOptions : pb::IMessage<CommonOptions> {
    private static readonly pb::MessageParser<CommonOptions> _parser = new pb::MessageParser<CommonOptions>(() => new CommonOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommonOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonOptions(CommonOptions other) : this() {
      sendToChannelIds_ = other.sendToChannelIds_.Clone();
      cacheOptions_ = other.cacheOptions_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonOptions Clone() {
      return new CommonOptions(this);
    }

    /// <summary>Field number for the "sendToChannelIds" field.</summary>
    public const int SendToChannelIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_sendToChannelIds_codec
        = pb::FieldCodec.ForUInt32(10);
    private readonly pbc::RepeatedField<uint> sendToChannelIds_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> SendToChannelIds {
      get { return sendToChannelIds_; }
    }

    /// <summary>Field number for the "cacheOptions" field.</summary>
    public const int CacheOptionsFieldNumber = 2;
    private global::Netgo.Library.CacheOptions cacheOptions_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.CacheOptions CacheOptions {
      get { return cacheOptions_; }
      set {
        cacheOptions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommonOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommonOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sendToChannelIds_.Equals(other.sendToChannelIds_)) return false;
      if (CacheOptions != other.CacheOptions) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sendToChannelIds_.GetHashCode();
      if (CacheOptions != 0) hash ^= CacheOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      sendToChannelIds_.WriteTo(output, _repeated_sendToChannelIds_codec);
      if (CacheOptions != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) CacheOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += sendToChannelIds_.CalculateSize(_repeated_sendToChannelIds_codec);
      if (CacheOptions != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CacheOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommonOptions other) {
      if (other == null) {
        return;
      }
      sendToChannelIds_.Add(other.sendToChannelIds_);
      if (other.CacheOptions != 0) {
        CacheOptions = other.CacheOptions;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            sendToChannelIds_.AddEntriesFrom(input, _repeated_sendToChannelIds_codec);
            break;
          }
          case 16: {
            cacheOptions_ = (global::Netgo.Library.CacheOptions) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateRoomParams : pb::IMessage<CreateRoomParams> {
    private static readonly pb::MessageParser<CreateRoomParams> _parser = new pb::MessageParser<CreateRoomParams>(() => new CreateRoomParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateRoomParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomParams(CreateRoomParams other) : this() {
      roomId_ = other.roomId_;
      maxNumber_ = other.maxNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomParams Clone() {
      return new CreateRoomParams(this);
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maxNumber" field.</summary>
    public const int MaxNumberFieldNumber = 2;
    private uint maxNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MaxNumber {
      get { return maxNumber_; }
      set {
        maxNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateRoomParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateRoomParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (MaxNumber != other.MaxNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (MaxNumber != 0) hash ^= MaxNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomId);
      }
      if (MaxNumber != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MaxNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (MaxNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateRoomParams other) {
      if (other == null) {
        return;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      if (other.MaxNumber != 0) {
        MaxNumber = other.MaxNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomId = input.ReadString();
            break;
          }
          case 16: {
            MaxNumber = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateRoomResponseParams : pb::IMessage<CreateRoomResponseParams> {
    private static readonly pb::MessageParser<CreateRoomResponseParams> _parser = new pb::MessageParser<CreateRoomResponseParams>(() => new CreateRoomResponseParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateRoomResponseParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomResponseParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomResponseParams(CreateRoomResponseParams other) : this() {
      returnValue_ = other.returnValue_;
      message_ = other.message_;
      peerId_ = other.peerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomResponseParams Clone() {
      return new CreateRoomResponseParams(this);
    }

    /// <summary>Field number for the "returnValue" field.</summary>
    public const int ReturnValueFieldNumber = 1;
    private uint returnValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ReturnValue {
      get { return returnValue_; }
      set {
        returnValue_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "peerId" field.</summary>
    public const int PeerIdFieldNumber = 3;
    private uint peerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PeerId {
      get { return peerId_; }
      set {
        peerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateRoomResponseParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateRoomResponseParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReturnValue != other.ReturnValue) return false;
      if (Message != other.Message) return false;
      if (PeerId != other.PeerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReturnValue != 0) hash ^= ReturnValue.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (PeerId != 0) hash ^= PeerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReturnValue != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ReturnValue);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (PeerId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PeerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReturnValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReturnValue);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (PeerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateRoomResponseParams other) {
      if (other == null) {
        return;
      }
      if (other.ReturnValue != 0) {
        ReturnValue = other.ReturnValue;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.PeerId != 0) {
        PeerId = other.PeerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReturnValue = input.ReadUInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 24: {
            PeerId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinRoomParams : pb::IMessage<JoinRoomParams> {
    private static readonly pb::MessageParser<JoinRoomParams> _parser = new pb::MessageParser<JoinRoomParams>(() => new JoinRoomParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinRoomParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomParams(JoinRoomParams other) : this() {
      roomId_ = other.roomId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomParams Clone() {
      return new JoinRoomParams(this);
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinRoomParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinRoomParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinRoomParams other) {
      if (other == null) {
        return;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinRoomResponseParams : pb::IMessage<JoinRoomResponseParams> {
    private static readonly pb::MessageParser<JoinRoomResponseParams> _parser = new pb::MessageParser<JoinRoomResponseParams>(() => new JoinRoomResponseParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinRoomResponseParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomResponseParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomResponseParams(JoinRoomResponseParams other) : this() {
      returnValue_ = other.returnValue_;
      message_ = other.message_;
      peerId_ = other.peerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomResponseParams Clone() {
      return new JoinRoomResponseParams(this);
    }

    /// <summary>Field number for the "returnValue" field.</summary>
    public const int ReturnValueFieldNumber = 1;
    private uint returnValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ReturnValue {
      get { return returnValue_; }
      set {
        returnValue_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "peerId" field.</summary>
    public const int PeerIdFieldNumber = 3;
    private uint peerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PeerId {
      get { return peerId_; }
      set {
        peerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinRoomResponseParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinRoomResponseParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReturnValue != other.ReturnValue) return false;
      if (Message != other.Message) return false;
      if (PeerId != other.PeerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReturnValue != 0) hash ^= ReturnValue.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (PeerId != 0) hash ^= PeerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReturnValue != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ReturnValue);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (PeerId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PeerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReturnValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReturnValue);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (PeerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinRoomResponseParams other) {
      if (other == null) {
        return;
      }
      if (other.ReturnValue != 0) {
        ReturnValue = other.ReturnValue;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.PeerId != 0) {
        PeerId = other.PeerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReturnValue = input.ReadUInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 24: {
            PeerId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinRoomForwardParams : pb::IMessage<JoinRoomForwardParams> {
    private static readonly pb::MessageParser<JoinRoomForwardParams> _parser = new pb::MessageParser<JoinRoomForwardParams>(() => new JoinRoomForwardParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinRoomForwardParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomForwardParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomForwardParams(JoinRoomForwardParams other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomForwardParams Clone() {
      return new JoinRoomForwardParams(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinRoomForwardParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinRoomForwardParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinRoomForwardParams other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class JoinOrCreateRoomParams : pb::IMessage<JoinOrCreateRoomParams> {
    private static readonly pb::MessageParser<JoinOrCreateRoomParams> _parser = new pb::MessageParser<JoinOrCreateRoomParams>(() => new JoinOrCreateRoomParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinOrCreateRoomParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinOrCreateRoomParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinOrCreateRoomParams(JoinOrCreateRoomParams other) : this() {
      roomId_ = other.roomId_;
      maxNumber_ = other.maxNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinOrCreateRoomParams Clone() {
      return new JoinOrCreateRoomParams(this);
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maxNumber" field.</summary>
    public const int MaxNumberFieldNumber = 2;
    private uint maxNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MaxNumber {
      get { return maxNumber_; }
      set {
        maxNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinOrCreateRoomParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinOrCreateRoomParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (MaxNumber != other.MaxNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (MaxNumber != 0) hash ^= MaxNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomId);
      }
      if (MaxNumber != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MaxNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (MaxNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinOrCreateRoomParams other) {
      if (other == null) {
        return;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      if (other.MaxNumber != 0) {
        MaxNumber = other.MaxNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomId = input.ReadString();
            break;
          }
          case 16: {
            MaxNumber = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinOrCreateRoomResponseParams : pb::IMessage<JoinOrCreateRoomResponseParams> {
    private static readonly pb::MessageParser<JoinOrCreateRoomResponseParams> _parser = new pb::MessageParser<JoinOrCreateRoomResponseParams>(() => new JoinOrCreateRoomResponseParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinOrCreateRoomResponseParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinOrCreateRoomResponseParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinOrCreateRoomResponseParams(JoinOrCreateRoomResponseParams other) : this() {
      returnValue_ = other.returnValue_;
      message_ = other.message_;
      peerId_ = other.peerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinOrCreateRoomResponseParams Clone() {
      return new JoinOrCreateRoomResponseParams(this);
    }

    /// <summary>Field number for the "returnValue" field.</summary>
    public const int ReturnValueFieldNumber = 1;
    private uint returnValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ReturnValue {
      get { return returnValue_; }
      set {
        returnValue_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "peerId" field.</summary>
    public const int PeerIdFieldNumber = 3;
    private uint peerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PeerId {
      get { return peerId_; }
      set {
        peerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinOrCreateRoomResponseParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinOrCreateRoomResponseParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReturnValue != other.ReturnValue) return false;
      if (Message != other.Message) return false;
      if (PeerId != other.PeerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReturnValue != 0) hash ^= ReturnValue.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (PeerId != 0) hash ^= PeerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReturnValue != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ReturnValue);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (PeerId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PeerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReturnValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReturnValue);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (PeerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinOrCreateRoomResponseParams other) {
      if (other == null) {
        return;
      }
      if (other.ReturnValue != 0) {
        ReturnValue = other.ReturnValue;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.PeerId != 0) {
        PeerId = other.PeerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReturnValue = input.ReadUInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 24: {
            PeerId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinOrCreateRoomForwardParams : pb::IMessage<JoinOrCreateRoomForwardParams> {
    private static readonly pb::MessageParser<JoinOrCreateRoomForwardParams> _parser = new pb::MessageParser<JoinOrCreateRoomForwardParams>(() => new JoinOrCreateRoomForwardParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinOrCreateRoomForwardParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinOrCreateRoomForwardParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinOrCreateRoomForwardParams(JoinOrCreateRoomForwardParams other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinOrCreateRoomForwardParams Clone() {
      return new JoinOrCreateRoomForwardParams(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinOrCreateRoomForwardParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinOrCreateRoomForwardParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinOrCreateRoomForwardParams other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class LeaveRoomParams : pb::IMessage<LeaveRoomParams> {
    private static readonly pb::MessageParser<LeaveRoomParams> _parser = new pb::MessageParser<LeaveRoomParams>(() => new LeaveRoomParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaveRoomParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomParams(LeaveRoomParams other) : this() {
      roomId_ = other.roomId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomParams Clone() {
      return new LeaveRoomParams(this);
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaveRoomParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaveRoomParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaveRoomParams other) {
      if (other == null) {
        return;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LeaveRoomResponseParams : pb::IMessage<LeaveRoomResponseParams> {
    private static readonly pb::MessageParser<LeaveRoomResponseParams> _parser = new pb::MessageParser<LeaveRoomResponseParams>(() => new LeaveRoomResponseParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaveRoomResponseParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomResponseParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomResponseParams(LeaveRoomResponseParams other) : this() {
      returnValue_ = other.returnValue_;
      message_ = other.message_;
      peerId_ = other.peerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomResponseParams Clone() {
      return new LeaveRoomResponseParams(this);
    }

    /// <summary>Field number for the "returnValue" field.</summary>
    public const int ReturnValueFieldNumber = 1;
    private uint returnValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ReturnValue {
      get { return returnValue_; }
      set {
        returnValue_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "peerId" field.</summary>
    public const int PeerIdFieldNumber = 3;
    private uint peerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PeerId {
      get { return peerId_; }
      set {
        peerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaveRoomResponseParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaveRoomResponseParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReturnValue != other.ReturnValue) return false;
      if (Message != other.Message) return false;
      if (PeerId != other.PeerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReturnValue != 0) hash ^= ReturnValue.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (PeerId != 0) hash ^= PeerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReturnValue != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ReturnValue);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (PeerId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PeerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReturnValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReturnValue);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (PeerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaveRoomResponseParams other) {
      if (other == null) {
        return;
      }
      if (other.ReturnValue != 0) {
        ReturnValue = other.ReturnValue;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.PeerId != 0) {
        PeerId = other.PeerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReturnValue = input.ReadUInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 24: {
            PeerId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LeaveRoomForwardParams : pb::IMessage<LeaveRoomForwardParams> {
    private static readonly pb::MessageParser<LeaveRoomForwardParams> _parser = new pb::MessageParser<LeaveRoomForwardParams>(() => new LeaveRoomForwardParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaveRoomForwardParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomForwardParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomForwardParams(LeaveRoomForwardParams other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomForwardParams Clone() {
      return new LeaveRoomForwardParams(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaveRoomForwardParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaveRoomForwardParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaveRoomForwardParams other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///RPC parameters send from client to server
  /// </summary>
  public sealed partial class RPCParams : pb::IMessage<RPCParams> {
    private static readonly pb::MessageParser<RPCParams> _parser = new pb::MessageParser<RPCParams>(() => new RPCParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RPCParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RPCParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RPCParams(RPCParams other) : this() {
      Options = other.options_ != null ? other.Options.Clone() : null;
      target_ = other.target_;
      viewID_ = other.viewID_;
      methodName_ = other.methodName_;
      parameters_ = other.parameters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RPCParams Clone() {
      return new RPCParams(this);
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 1;
    private global::Netgo.Library.CommonOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.CommonOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 2;
    private global::Netgo.Library.RPCTarget target_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.RPCTarget Target {
      get { return target_; }
      set {
        target_ = value;
      }
    }

    /// <summary>Field number for the "viewID" field.</summary>
    public const int ViewIDFieldNumber = 3;
    private uint viewID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ViewID {
      get { return viewID_; }
      set {
        viewID_ = value;
      }
    }

    /// <summary>Field number for the "methodName" field.</summary>
    public const int MethodNameFieldNumber = 4;
    private string methodName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MethodName {
      get { return methodName_; }
      set {
        methodName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parameters" field.</summary>
    public const int ParametersFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Netgo.Library.NGAny> _repeated_parameters_codec
        = pb::FieldCodec.ForMessage(42, global::Netgo.Library.NGAny.Parser);
    private readonly pbc::RepeatedField<global::Netgo.Library.NGAny> parameters_ = new pbc::RepeatedField<global::Netgo.Library.NGAny>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Netgo.Library.NGAny> Parameters {
      get { return parameters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RPCParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RPCParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Options, other.Options)) return false;
      if (Target != other.Target) return false;
      if (ViewID != other.ViewID) return false;
      if (MethodName != other.MethodName) return false;
      if(!parameters_.Equals(other.parameters_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (options_ != null) hash ^= Options.GetHashCode();
      if (Target != 0) hash ^= Target.GetHashCode();
      if (ViewID != 0) hash ^= ViewID.GetHashCode();
      if (MethodName.Length != 0) hash ^= MethodName.GetHashCode();
      hash ^= parameters_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (options_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Options);
      }
      if (Target != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Target);
      }
      if (ViewID != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ViewID);
      }
      if (MethodName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MethodName);
      }
      parameters_.WriteTo(output, _repeated_parameters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (options_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (Target != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Target);
      }
      if (ViewID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ViewID);
      }
      if (MethodName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MethodName);
      }
      size += parameters_.CalculateSize(_repeated_parameters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RPCParams other) {
      if (other == null) {
        return;
      }
      if (other.options_ != null) {
        if (options_ == null) {
          options_ = new global::Netgo.Library.CommonOptions();
        }
        Options.MergeFrom(other.Options);
      }
      if (other.Target != 0) {
        Target = other.Target;
      }
      if (other.ViewID != 0) {
        ViewID = other.ViewID;
      }
      if (other.MethodName.Length != 0) {
        MethodName = other.MethodName;
      }
      parameters_.Add(other.parameters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (options_ == null) {
              options_ = new global::Netgo.Library.CommonOptions();
            }
            input.ReadMessage(options_);
            break;
          }
          case 16: {
            target_ = (global::Netgo.Library.RPCTarget) input.ReadEnum();
            break;
          }
          case 24: {
            ViewID = input.ReadUInt32();
            break;
          }
          case 34: {
            MethodName = input.ReadString();
            break;
          }
          case 42: {
            parameters_.AddEntriesFrom(input, _repeated_parameters_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RPCForwardParams : pb::IMessage<RPCForwardParams> {
    private static readonly pb::MessageParser<RPCForwardParams> _parser = new pb::MessageParser<RPCForwardParams>(() => new RPCForwardParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RPCForwardParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RPCForwardParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RPCForwardParams(RPCForwardParams other) : this() {
      viewID_ = other.viewID_;
      methodName_ = other.methodName_;
      parameters_ = other.parameters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RPCForwardParams Clone() {
      return new RPCForwardParams(this);
    }

    /// <summary>Field number for the "viewID" field.</summary>
    public const int ViewIDFieldNumber = 1;
    private uint viewID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ViewID {
      get { return viewID_; }
      set {
        viewID_ = value;
      }
    }

    /// <summary>Field number for the "methodName" field.</summary>
    public const int MethodNameFieldNumber = 2;
    private string methodName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MethodName {
      get { return methodName_; }
      set {
        methodName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parameters" field.</summary>
    public const int ParametersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Netgo.Library.NGAny> _repeated_parameters_codec
        = pb::FieldCodec.ForMessage(26, global::Netgo.Library.NGAny.Parser);
    private readonly pbc::RepeatedField<global::Netgo.Library.NGAny> parameters_ = new pbc::RepeatedField<global::Netgo.Library.NGAny>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Netgo.Library.NGAny> Parameters {
      get { return parameters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RPCForwardParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RPCForwardParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ViewID != other.ViewID) return false;
      if (MethodName != other.MethodName) return false;
      if(!parameters_.Equals(other.parameters_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ViewID != 0) hash ^= ViewID.GetHashCode();
      if (MethodName.Length != 0) hash ^= MethodName.GetHashCode();
      hash ^= parameters_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ViewID != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ViewID);
      }
      if (MethodName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MethodName);
      }
      parameters_.WriteTo(output, _repeated_parameters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ViewID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ViewID);
      }
      if (MethodName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MethodName);
      }
      size += parameters_.CalculateSize(_repeated_parameters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RPCForwardParams other) {
      if (other == null) {
        return;
      }
      if (other.ViewID != 0) {
        ViewID = other.ViewID;
      }
      if (other.MethodName.Length != 0) {
        MethodName = other.MethodName;
      }
      parameters_.Add(other.parameters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ViewID = input.ReadUInt32();
            break;
          }
          case 18: {
            MethodName = input.ReadString();
            break;
          }
          case 26: {
            parameters_.AddEntriesFrom(input, _repeated_parameters_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NGVector3 : pb::IMessage<NGVector3> {
    private static readonly pb::MessageParser<NGVector3> _parser = new pb::MessageParser<NGVector3>(() => new NGVector3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NGVector3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NGVector3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NGVector3(NGVector3 other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NGVector3 Clone() {
      return new NGVector3(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NGVector3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NGVector3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NGVector3 other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NGQuaternion : pb::IMessage<NGQuaternion> {
    private static readonly pb::MessageParser<NGQuaternion> _parser = new pb::MessageParser<NGQuaternion>(() => new NGQuaternion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NGQuaternion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NGQuaternion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NGQuaternion(NGQuaternion other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      w_ = other.w_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NGQuaternion Clone() {
      return new NGQuaternion(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "w" field.</summary>
    public const int WFieldNumber = 4;
    private float w_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float W {
      get { return w_; }
      set {
        w_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NGQuaternion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NGQuaternion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(W, other.W)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (W != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(W);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (W != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(W);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (W != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NGQuaternion other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      if (other.W != 0F) {
        W = other.W;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
          case 37: {
            W = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NGColor : pb::IMessage<NGColor> {
    private static readonly pb::MessageParser<NGColor> _parser = new pb::MessageParser<NGColor>(() => new NGColor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NGColor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NGColor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NGColor(NGColor other) : this() {
      r_ = other.r_;
      g_ = other.g_;
      b_ = other.b_;
      a_ = other.a_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NGColor Clone() {
      return new NGColor(this);
    }

    /// <summary>Field number for the "r" field.</summary>
    public const int RFieldNumber = 1;
    private float r_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float R {
      get { return r_; }
      set {
        r_ = value;
      }
    }

    /// <summary>Field number for the "g" field.</summary>
    public const int GFieldNumber = 2;
    private float g_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float G {
      get { return g_; }
      set {
        g_ = value;
      }
    }

    /// <summary>Field number for the "b" field.</summary>
    public const int BFieldNumber = 3;
    private float b_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float B {
      get { return b_; }
      set {
        b_ = value;
      }
    }

    /// <summary>Field number for the "a" field.</summary>
    public const int AFieldNumber = 4;
    private float a_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float A {
      get { return a_; }
      set {
        a_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NGColor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NGColor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(R, other.R)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(G, other.G)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(B, other.B)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(A, other.A)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (R != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(R);
      if (G != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(G);
      if (B != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(B);
      if (A != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(A);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (R != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(R);
      }
      if (G != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(G);
      }
      if (B != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(B);
      }
      if (A != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(A);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (R != 0F) {
        size += 1 + 4;
      }
      if (G != 0F) {
        size += 1 + 4;
      }
      if (B != 0F) {
        size += 1 + 4;
      }
      if (A != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NGColor other) {
      if (other == null) {
        return;
      }
      if (other.R != 0F) {
        R = other.R;
      }
      if (other.G != 0F) {
        G = other.G;
      }
      if (other.B != 0F) {
        B = other.B;
      }
      if (other.A != 0F) {
        A = other.A;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            R = input.ReadFloat();
            break;
          }
          case 21: {
            G = input.ReadFloat();
            break;
          }
          case 29: {
            B = input.ReadFloat();
            break;
          }
          case 37: {
            A = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///LaunchEventParams and LaunchEventForwardParams all use this message body
  /// </summary>
  public sealed partial class InstantiationParams : pb::IMessage<InstantiationParams> {
    private static readonly pb::MessageParser<InstantiationParams> _parser = new pb::MessageParser<InstantiationParams>(() => new InstantiationParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InstantiationParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstantiationParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstantiationParams(InstantiationParams other) : this() {
      Options = other.options_ != null ? other.Options.Clone() : null;
      prefabName_ = other.prefabName_;
      Position = other.position_ != null ? other.Position.Clone() : null;
      Rotation = other.rotation_ != null ? other.Rotation.Clone() : null;
      viewIDs_ = other.viewIDs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstantiationParams Clone() {
      return new InstantiationParams(this);
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 1;
    private global::Netgo.Library.CommonOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.CommonOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    /// <summary>Field number for the "prefabName" field.</summary>
    public const int PrefabNameFieldNumber = 2;
    private string prefabName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrefabName {
      get { return prefabName_; }
      set {
        prefabName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 3;
    private global::Netgo.Library.NGVector3 position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.NGVector3 Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "rotation" field.</summary>
    public const int RotationFieldNumber = 4;
    private global::Netgo.Library.NGQuaternion rotation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.NGQuaternion Rotation {
      get { return rotation_; }
      set {
        rotation_ = value;
      }
    }

    /// <summary>Field number for the "viewIDs" field.</summary>
    public const int ViewIDsFieldNumber = 5;
    private static readonly pb::FieldCodec<uint> _repeated_viewIDs_codec
        = pb::FieldCodec.ForUInt32(42);
    private readonly pbc::RepeatedField<uint> viewIDs_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> ViewIDs {
      get { return viewIDs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InstantiationParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InstantiationParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Options, other.Options)) return false;
      if (PrefabName != other.PrefabName) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Rotation, other.Rotation)) return false;
      if(!viewIDs_.Equals(other.viewIDs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (options_ != null) hash ^= Options.GetHashCode();
      if (PrefabName.Length != 0) hash ^= PrefabName.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (rotation_ != null) hash ^= Rotation.GetHashCode();
      hash ^= viewIDs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (options_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Options);
      }
      if (PrefabName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PrefabName);
      }
      if (position_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Position);
      }
      if (rotation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Rotation);
      }
      viewIDs_.WriteTo(output, _repeated_viewIDs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (options_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (PrefabName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrefabName);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (rotation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
      }
      size += viewIDs_.CalculateSize(_repeated_viewIDs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InstantiationParams other) {
      if (other == null) {
        return;
      }
      if (other.options_ != null) {
        if (options_ == null) {
          options_ = new global::Netgo.Library.CommonOptions();
        }
        Options.MergeFrom(other.Options);
      }
      if (other.PrefabName.Length != 0) {
        PrefabName = other.PrefabName;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          position_ = new global::Netgo.Library.NGVector3();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.rotation_ != null) {
        if (rotation_ == null) {
          rotation_ = new global::Netgo.Library.NGQuaternion();
        }
        Rotation.MergeFrom(other.Rotation);
      }
      viewIDs_.Add(other.viewIDs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (options_ == null) {
              options_ = new global::Netgo.Library.CommonOptions();
            }
            input.ReadMessage(options_);
            break;
          }
          case 18: {
            PrefabName = input.ReadString();
            break;
          }
          case 26: {
            if (position_ == null) {
              position_ = new global::Netgo.Library.NGVector3();
            }
            input.ReadMessage(position_);
            break;
          }
          case 34: {
            if (rotation_ == null) {
              rotation_ = new global::Netgo.Library.NGQuaternion();
            }
            input.ReadMessage(rotation_);
            break;
          }
          case 42:
          case 40: {
            viewIDs_.AddEntriesFrom(input, _repeated_viewIDs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InstantiationForwardParams : pb::IMessage<InstantiationForwardParams> {
    private static readonly pb::MessageParser<InstantiationForwardParams> _parser = new pb::MessageParser<InstantiationForwardParams>(() => new InstantiationForwardParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InstantiationForwardParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstantiationForwardParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstantiationForwardParams(InstantiationForwardParams other) : this() {
      prefabName_ = other.prefabName_;
      Position = other.position_ != null ? other.Position.Clone() : null;
      Rotation = other.rotation_ != null ? other.Rotation.Clone() : null;
      viewIDs_ = other.viewIDs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstantiationForwardParams Clone() {
      return new InstantiationForwardParams(this);
    }

    /// <summary>Field number for the "prefabName" field.</summary>
    public const int PrefabNameFieldNumber = 1;
    private string prefabName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrefabName {
      get { return prefabName_; }
      set {
        prefabName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 2;
    private global::Netgo.Library.NGVector3 position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.NGVector3 Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "rotation" field.</summary>
    public const int RotationFieldNumber = 3;
    private global::Netgo.Library.NGQuaternion rotation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.NGQuaternion Rotation {
      get { return rotation_; }
      set {
        rotation_ = value;
      }
    }

    /// <summary>Field number for the "viewIDs" field.</summary>
    public const int ViewIDsFieldNumber = 4;
    private static readonly pb::FieldCodec<uint> _repeated_viewIDs_codec
        = pb::FieldCodec.ForUInt32(34);
    private readonly pbc::RepeatedField<uint> viewIDs_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> ViewIDs {
      get { return viewIDs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InstantiationForwardParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InstantiationForwardParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PrefabName != other.PrefabName) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Rotation, other.Rotation)) return false;
      if(!viewIDs_.Equals(other.viewIDs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PrefabName.Length != 0) hash ^= PrefabName.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (rotation_ != null) hash ^= Rotation.GetHashCode();
      hash ^= viewIDs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PrefabName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PrefabName);
      }
      if (position_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Position);
      }
      if (rotation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Rotation);
      }
      viewIDs_.WriteTo(output, _repeated_viewIDs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PrefabName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrefabName);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (rotation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
      }
      size += viewIDs_.CalculateSize(_repeated_viewIDs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InstantiationForwardParams other) {
      if (other == null) {
        return;
      }
      if (other.PrefabName.Length != 0) {
        PrefabName = other.PrefabName;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          position_ = new global::Netgo.Library.NGVector3();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.rotation_ != null) {
        if (rotation_ == null) {
          rotation_ = new global::Netgo.Library.NGQuaternion();
        }
        Rotation.MergeFrom(other.Rotation);
      }
      viewIDs_.Add(other.viewIDs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PrefabName = input.ReadString();
            break;
          }
          case 18: {
            if (position_ == null) {
              position_ = new global::Netgo.Library.NGVector3();
            }
            input.ReadMessage(position_);
            break;
          }
          case 26: {
            if (rotation_ == null) {
              rotation_ = new global::Netgo.Library.NGQuaternion();
            }
            input.ReadMessage(rotation_);
            break;
          }
          case 34:
          case 32: {
            viewIDs_.AddEntriesFrom(input, _repeated_viewIDs_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///LaunchEventParams and LaunchEventForwardParams all use this message body
  /// </summary>
  public sealed partial class ViewSyncDataParams : pb::IMessage<ViewSyncDataParams> {
    private static readonly pb::MessageParser<ViewSyncDataParams> _parser = new pb::MessageParser<ViewSyncDataParams>(() => new ViewSyncDataParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ViewSyncDataParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewSyncDataParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewSyncDataParams(ViewSyncDataParams other) : this() {
      viewID_ = other.viewID_;
      viewSyncData_ = other.viewSyncData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewSyncDataParams Clone() {
      return new ViewSyncDataParams(this);
    }

    /// <summary>Field number for the "viewID" field.</summary>
    public const int ViewIDFieldNumber = 1;
    private uint viewID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ViewID {
      get { return viewID_; }
      set {
        viewID_ = value;
      }
    }

    /// <summary>Field number for the "viewSyncData" field.</summary>
    public const int ViewSyncDataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Netgo.Library.NGAny> _repeated_viewSyncData_codec
        = pb::FieldCodec.ForMessage(18, global::Netgo.Library.NGAny.Parser);
    private readonly pbc::RepeatedField<global::Netgo.Library.NGAny> viewSyncData_ = new pbc::RepeatedField<global::Netgo.Library.NGAny>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Netgo.Library.NGAny> ViewSyncData {
      get { return viewSyncData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ViewSyncDataParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ViewSyncDataParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ViewID != other.ViewID) return false;
      if(!viewSyncData_.Equals(other.viewSyncData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ViewID != 0) hash ^= ViewID.GetHashCode();
      hash ^= viewSyncData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ViewID != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ViewID);
      }
      viewSyncData_.WriteTo(output, _repeated_viewSyncData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ViewID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ViewID);
      }
      size += viewSyncData_.CalculateSize(_repeated_viewSyncData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ViewSyncDataParams other) {
      if (other == null) {
        return;
      }
      if (other.ViewID != 0) {
        ViewID = other.ViewID;
      }
      viewSyncData_.Add(other.viewSyncData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ViewID = input.ReadUInt32();
            break;
          }
          case 18: {
            viewSyncData_.AddEntriesFrom(input, _repeated_viewSyncData_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ViewSyncParams : pb::IMessage<ViewSyncParams> {
    private static readonly pb::MessageParser<ViewSyncParams> _parser = new pb::MessageParser<ViewSyncParams>(() => new ViewSyncParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ViewSyncParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewSyncParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewSyncParams(ViewSyncParams other) : this() {
      Options = other.options_ != null ? other.Options.Clone() : null;
      vsdParams_ = other.vsdParams_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewSyncParams Clone() {
      return new ViewSyncParams(this);
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 1;
    private global::Netgo.Library.CommonOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.CommonOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    /// <summary>Field number for the "vsdParams" field.</summary>
    public const int VsdParamsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Netgo.Library.ViewSyncDataParams> _repeated_vsdParams_codec
        = pb::FieldCodec.ForMessage(18, global::Netgo.Library.ViewSyncDataParams.Parser);
    private readonly pbc::RepeatedField<global::Netgo.Library.ViewSyncDataParams> vsdParams_ = new pbc::RepeatedField<global::Netgo.Library.ViewSyncDataParams>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Netgo.Library.ViewSyncDataParams> VsdParams {
      get { return vsdParams_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ViewSyncParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ViewSyncParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Options, other.Options)) return false;
      if(!vsdParams_.Equals(other.vsdParams_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (options_ != null) hash ^= Options.GetHashCode();
      hash ^= vsdParams_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (options_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Options);
      }
      vsdParams_.WriteTo(output, _repeated_vsdParams_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (options_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      size += vsdParams_.CalculateSize(_repeated_vsdParams_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ViewSyncParams other) {
      if (other == null) {
        return;
      }
      if (other.options_ != null) {
        if (options_ == null) {
          options_ = new global::Netgo.Library.CommonOptions();
        }
        Options.MergeFrom(other.Options);
      }
      vsdParams_.Add(other.vsdParams_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (options_ == null) {
              options_ = new global::Netgo.Library.CommonOptions();
            }
            input.ReadMessage(options_);
            break;
          }
          case 18: {
            vsdParams_.AddEntriesFrom(input, _repeated_vsdParams_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ViewSyncForwardParams : pb::IMessage<ViewSyncForwardParams> {
    private static readonly pb::MessageParser<ViewSyncForwardParams> _parser = new pb::MessageParser<ViewSyncForwardParams>(() => new ViewSyncForwardParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ViewSyncForwardParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewSyncForwardParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewSyncForwardParams(ViewSyncForwardParams other) : this() {
      vsdParams_ = other.vsdParams_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewSyncForwardParams Clone() {
      return new ViewSyncForwardParams(this);
    }

    /// <summary>Field number for the "vsdParams" field.</summary>
    public const int VsdParamsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Netgo.Library.ViewSyncDataParams> _repeated_vsdParams_codec
        = pb::FieldCodec.ForMessage(10, global::Netgo.Library.ViewSyncDataParams.Parser);
    private readonly pbc::RepeatedField<global::Netgo.Library.ViewSyncDataParams> vsdParams_ = new pbc::RepeatedField<global::Netgo.Library.ViewSyncDataParams>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Netgo.Library.ViewSyncDataParams> VsdParams {
      get { return vsdParams_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ViewSyncForwardParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ViewSyncForwardParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!vsdParams_.Equals(other.vsdParams_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= vsdParams_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      vsdParams_.WriteTo(output, _repeated_vsdParams_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += vsdParams_.CalculateSize(_repeated_vsdParams_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ViewSyncForwardParams other) {
      if (other == null) {
        return;
      }
      vsdParams_.Add(other.vsdParams_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            vsdParams_.AddEntriesFrom(input, _repeated_vsdParams_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CustomEventParams : pb::IMessage<CustomEventParams> {
    private static readonly pb::MessageParser<CustomEventParams> _parser = new pb::MessageParser<CustomEventParams>(() => new CustomEventParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomEventParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomEventParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomEventParams(CustomEventParams other) : this() {
      Options = other.options_ != null ? other.Options.Clone() : null;
      eventID_ = other.eventID_;
      targetPeerIds_ = other.targetPeerIds_.Clone();
      customData_ = other.customData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomEventParams Clone() {
      return new CustomEventParams(this);
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 1;
    private global::Netgo.Library.CommonOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.CommonOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    /// <summary>Field number for the "eventID" field.</summary>
    public const int EventIDFieldNumber = 2;
    private uint eventID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint EventID {
      get { return eventID_; }
      set {
        eventID_ = value;
      }
    }

    /// <summary>Field number for the "targetPeerIds" field.</summary>
    public const int TargetPeerIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_targetPeerIds_codec
        = pb::FieldCodec.ForUInt32(26);
    private readonly pbc::RepeatedField<uint> targetPeerIds_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> TargetPeerIds {
      get { return targetPeerIds_; }
    }

    /// <summary>Field number for the "customData" field.</summary>
    public const int CustomDataFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Netgo.Library.NGAny> _repeated_customData_codec
        = pb::FieldCodec.ForMessage(34, global::Netgo.Library.NGAny.Parser);
    private readonly pbc::RepeatedField<global::Netgo.Library.NGAny> customData_ = new pbc::RepeatedField<global::Netgo.Library.NGAny>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Netgo.Library.NGAny> CustomData {
      get { return customData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomEventParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomEventParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Options, other.Options)) return false;
      if (EventID != other.EventID) return false;
      if(!targetPeerIds_.Equals(other.targetPeerIds_)) return false;
      if(!customData_.Equals(other.customData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (options_ != null) hash ^= Options.GetHashCode();
      if (EventID != 0) hash ^= EventID.GetHashCode();
      hash ^= targetPeerIds_.GetHashCode();
      hash ^= customData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (options_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Options);
      }
      if (EventID != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(EventID);
      }
      targetPeerIds_.WriteTo(output, _repeated_targetPeerIds_codec);
      customData_.WriteTo(output, _repeated_customData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (options_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (EventID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EventID);
      }
      size += targetPeerIds_.CalculateSize(_repeated_targetPeerIds_codec);
      size += customData_.CalculateSize(_repeated_customData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomEventParams other) {
      if (other == null) {
        return;
      }
      if (other.options_ != null) {
        if (options_ == null) {
          options_ = new global::Netgo.Library.CommonOptions();
        }
        Options.MergeFrom(other.Options);
      }
      if (other.EventID != 0) {
        EventID = other.EventID;
      }
      targetPeerIds_.Add(other.targetPeerIds_);
      customData_.Add(other.customData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (options_ == null) {
              options_ = new global::Netgo.Library.CommonOptions();
            }
            input.ReadMessage(options_);
            break;
          }
          case 16: {
            EventID = input.ReadUInt32();
            break;
          }
          case 26:
          case 24: {
            targetPeerIds_.AddEntriesFrom(input, _repeated_targetPeerIds_codec);
            break;
          }
          case 34: {
            customData_.AddEntriesFrom(input, _repeated_customData_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Launch Event only has Forward params
  /// </summary>
  public sealed partial class CustomEventForwardParams : pb::IMessage<CustomEventForwardParams> {
    private static readonly pb::MessageParser<CustomEventForwardParams> _parser = new pb::MessageParser<CustomEventForwardParams>(() => new CustomEventForwardParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomEventForwardParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomEventForwardParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomEventForwardParams(CustomEventForwardParams other) : this() {
      eventID_ = other.eventID_;
      customData_ = other.customData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomEventForwardParams Clone() {
      return new CustomEventForwardParams(this);
    }

    /// <summary>Field number for the "eventID" field.</summary>
    public const int EventIDFieldNumber = 1;
    private uint eventID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint EventID {
      get { return eventID_; }
      set {
        eventID_ = value;
      }
    }

    /// <summary>Field number for the "customData" field.</summary>
    public const int CustomDataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Netgo.Library.NGAny> _repeated_customData_codec
        = pb::FieldCodec.ForMessage(18, global::Netgo.Library.NGAny.Parser);
    private readonly pbc::RepeatedField<global::Netgo.Library.NGAny> customData_ = new pbc::RepeatedField<global::Netgo.Library.NGAny>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Netgo.Library.NGAny> CustomData {
      get { return customData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomEventForwardParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomEventForwardParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventID != other.EventID) return false;
      if(!customData_.Equals(other.customData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventID != 0) hash ^= EventID.GetHashCode();
      hash ^= customData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventID != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(EventID);
      }
      customData_.WriteTo(output, _repeated_customData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EventID);
      }
      size += customData_.CalculateSize(_repeated_customData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomEventForwardParams other) {
      if (other == null) {
        return;
      }
      if (other.EventID != 0) {
        EventID = other.EventID;
      }
      customData_.Add(other.customData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EventID = input.ReadUInt32();
            break;
          }
          case 18: {
            customData_.AddEntriesFrom(input, _repeated_customData_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscribeMsgChannelsParams : pb::IMessage<SubscribeMsgChannelsParams> {
    private static readonly pb::MessageParser<SubscribeMsgChannelsParams> _parser = new pb::MessageParser<SubscribeMsgChannelsParams>(() => new SubscribeMsgChannelsParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeMsgChannelsParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeMsgChannelsParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeMsgChannelsParams(SubscribeMsgChannelsParams other) : this() {
      channelids_ = other.channelids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeMsgChannelsParams Clone() {
      return new SubscribeMsgChannelsParams(this);
    }

    /// <summary>Field number for the "channelids" field.</summary>
    public const int ChannelidsFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_channelids_codec
        = pb::FieldCodec.ForUInt32(10);
    private readonly pbc::RepeatedField<uint> channelids_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Channelids {
      get { return channelids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeMsgChannelsParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeMsgChannelsParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!channelids_.Equals(other.channelids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= channelids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      channelids_.WriteTo(output, _repeated_channelids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += channelids_.CalculateSize(_repeated_channelids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeMsgChannelsParams other) {
      if (other == null) {
        return;
      }
      channelids_.Add(other.channelids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            channelids_.AddEntriesFrom(input, _repeated_channelids_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnSubscribeMsgChannelsParams : pb::IMessage<UnSubscribeMsgChannelsParams> {
    private static readonly pb::MessageParser<UnSubscribeMsgChannelsParams> _parser = new pb::MessageParser<UnSubscribeMsgChannelsParams>(() => new UnSubscribeMsgChannelsParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnSubscribeMsgChannelsParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnSubscribeMsgChannelsParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnSubscribeMsgChannelsParams(UnSubscribeMsgChannelsParams other) : this() {
      channelids_ = other.channelids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnSubscribeMsgChannelsParams Clone() {
      return new UnSubscribeMsgChannelsParams(this);
    }

    /// <summary>Field number for the "channelids" field.</summary>
    public const int ChannelidsFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_channelids_codec
        = pb::FieldCodec.ForUInt32(10);
    private readonly pbc::RepeatedField<uint> channelids_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Channelids {
      get { return channelids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnSubscribeMsgChannelsParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnSubscribeMsgChannelsParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!channelids_.Equals(other.channelids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= channelids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      channelids_.WriteTo(output, _repeated_channelids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += channelids_.CalculateSize(_repeated_channelids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnSubscribeMsgChannelsParams other) {
      if (other == null) {
        return;
      }
      channelids_.Add(other.channelids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            channelids_.AddEntriesFrom(input, _repeated_channelids_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///send from client to server
  /// </summary>
  public sealed partial class SendMessage : pb::IMessage<SendMessage> {
    private static readonly pb::MessageParser<SendMessage> _parser = new pb::MessageParser<SendMessage>(() => new SendMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMessage(SendMessage other) : this() {
      msgType_ = other.msgType_;
      CrParams = other.crParams_ != null ? other.CrParams.Clone() : null;
      JrParams = other.jrParams_ != null ? other.JrParams.Clone() : null;
      JocrParams = other.jocrParams_ != null ? other.JocrParams.Clone() : null;
      LrParams = other.lrParams_ != null ? other.LrParams.Clone() : null;
      RpcParams = other.rpcParams_ != null ? other.RpcParams.Clone() : null;
      IParams = other.iParams_ != null ? other.IParams.Clone() : null;
      VsParams = other.vsParams_ != null ? other.VsParams.Clone() : null;
      CeParams = other.ceParams_ != null ? other.CeParams.Clone() : null;
      SmcParams = other.smcParams_ != null ? other.SmcParams.Clone() : null;
      UsmcParams = other.usmcParams_ != null ? other.UsmcParams.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMessage Clone() {
      return new SendMessage(this);
    }

    /// <summary>Field number for the "msgType" field.</summary>
    public const int MsgTypeFieldNumber = 1;
    private global::Netgo.Library.MessageType msgType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.MessageType MsgType {
      get { return msgType_; }
      set {
        msgType_ = value;
      }
    }

    /// <summary>Field number for the "crParams" field.</summary>
    public const int CrParamsFieldNumber = 2;
    private global::Netgo.Library.CreateRoomParams crParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.CreateRoomParams CrParams {
      get { return crParams_; }
      set {
        crParams_ = value;
      }
    }

    /// <summary>Field number for the "jrParams" field.</summary>
    public const int JrParamsFieldNumber = 3;
    private global::Netgo.Library.JoinRoomParams jrParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.JoinRoomParams JrParams {
      get { return jrParams_; }
      set {
        jrParams_ = value;
      }
    }

    /// <summary>Field number for the "jocrParams" field.</summary>
    public const int JocrParamsFieldNumber = 4;
    private global::Netgo.Library.JoinOrCreateRoomParams jocrParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.JoinOrCreateRoomParams JocrParams {
      get { return jocrParams_; }
      set {
        jocrParams_ = value;
      }
    }

    /// <summary>Field number for the "lrParams" field.</summary>
    public const int LrParamsFieldNumber = 5;
    private global::Netgo.Library.LeaveRoomParams lrParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.LeaveRoomParams LrParams {
      get { return lrParams_; }
      set {
        lrParams_ = value;
      }
    }

    /// <summary>Field number for the "rpcParams" field.</summary>
    public const int RpcParamsFieldNumber = 6;
    private global::Netgo.Library.RPCParams rpcParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.RPCParams RpcParams {
      get { return rpcParams_; }
      set {
        rpcParams_ = value;
      }
    }

    /// <summary>Field number for the "iParams" field.</summary>
    public const int IParamsFieldNumber = 7;
    private global::Netgo.Library.InstantiationParams iParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.InstantiationParams IParams {
      get { return iParams_; }
      set {
        iParams_ = value;
      }
    }

    /// <summary>Field number for the "vsParams" field.</summary>
    public const int VsParamsFieldNumber = 8;
    private global::Netgo.Library.ViewSyncParams vsParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.ViewSyncParams VsParams {
      get { return vsParams_; }
      set {
        vsParams_ = value;
      }
    }

    /// <summary>Field number for the "ceParams" field.</summary>
    public const int CeParamsFieldNumber = 9;
    private global::Netgo.Library.CustomEventParams ceParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.CustomEventParams CeParams {
      get { return ceParams_; }
      set {
        ceParams_ = value;
      }
    }

    /// <summary>Field number for the "smcParams" field.</summary>
    public const int SmcParamsFieldNumber = 10;
    private global::Netgo.Library.SubscribeMsgChannelsParams smcParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.SubscribeMsgChannelsParams SmcParams {
      get { return smcParams_; }
      set {
        smcParams_ = value;
      }
    }

    /// <summary>Field number for the "usmcParams" field.</summary>
    public const int UsmcParamsFieldNumber = 11;
    private global::Netgo.Library.UnSubscribeMsgChannelsParams usmcParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.UnSubscribeMsgChannelsParams UsmcParams {
      get { return usmcParams_; }
      set {
        usmcParams_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgType != other.MsgType) return false;
      if (!object.Equals(CrParams, other.CrParams)) return false;
      if (!object.Equals(JrParams, other.JrParams)) return false;
      if (!object.Equals(JocrParams, other.JocrParams)) return false;
      if (!object.Equals(LrParams, other.LrParams)) return false;
      if (!object.Equals(RpcParams, other.RpcParams)) return false;
      if (!object.Equals(IParams, other.IParams)) return false;
      if (!object.Equals(VsParams, other.VsParams)) return false;
      if (!object.Equals(CeParams, other.CeParams)) return false;
      if (!object.Equals(SmcParams, other.SmcParams)) return false;
      if (!object.Equals(UsmcParams, other.UsmcParams)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgType != 0) hash ^= MsgType.GetHashCode();
      if (crParams_ != null) hash ^= CrParams.GetHashCode();
      if (jrParams_ != null) hash ^= JrParams.GetHashCode();
      if (jocrParams_ != null) hash ^= JocrParams.GetHashCode();
      if (lrParams_ != null) hash ^= LrParams.GetHashCode();
      if (rpcParams_ != null) hash ^= RpcParams.GetHashCode();
      if (iParams_ != null) hash ^= IParams.GetHashCode();
      if (vsParams_ != null) hash ^= VsParams.GetHashCode();
      if (ceParams_ != null) hash ^= CeParams.GetHashCode();
      if (smcParams_ != null) hash ^= SmcParams.GetHashCode();
      if (usmcParams_ != null) hash ^= UsmcParams.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MsgType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MsgType);
      }
      if (crParams_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CrParams);
      }
      if (jrParams_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(JrParams);
      }
      if (jocrParams_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(JocrParams);
      }
      if (lrParams_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LrParams);
      }
      if (rpcParams_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RpcParams);
      }
      if (iParams_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(IParams);
      }
      if (vsParams_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(VsParams);
      }
      if (ceParams_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(CeParams);
      }
      if (smcParams_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(SmcParams);
      }
      if (usmcParams_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(UsmcParams);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MsgType);
      }
      if (crParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CrParams);
      }
      if (jrParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JrParams);
      }
      if (jocrParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JocrParams);
      }
      if (lrParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LrParams);
      }
      if (rpcParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RpcParams);
      }
      if (iParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IParams);
      }
      if (vsParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VsParams);
      }
      if (ceParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CeParams);
      }
      if (smcParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SmcParams);
      }
      if (usmcParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UsmcParams);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendMessage other) {
      if (other == null) {
        return;
      }
      if (other.MsgType != 0) {
        MsgType = other.MsgType;
      }
      if (other.crParams_ != null) {
        if (crParams_ == null) {
          crParams_ = new global::Netgo.Library.CreateRoomParams();
        }
        CrParams.MergeFrom(other.CrParams);
      }
      if (other.jrParams_ != null) {
        if (jrParams_ == null) {
          jrParams_ = new global::Netgo.Library.JoinRoomParams();
        }
        JrParams.MergeFrom(other.JrParams);
      }
      if (other.jocrParams_ != null) {
        if (jocrParams_ == null) {
          jocrParams_ = new global::Netgo.Library.JoinOrCreateRoomParams();
        }
        JocrParams.MergeFrom(other.JocrParams);
      }
      if (other.lrParams_ != null) {
        if (lrParams_ == null) {
          lrParams_ = new global::Netgo.Library.LeaveRoomParams();
        }
        LrParams.MergeFrom(other.LrParams);
      }
      if (other.rpcParams_ != null) {
        if (rpcParams_ == null) {
          rpcParams_ = new global::Netgo.Library.RPCParams();
        }
        RpcParams.MergeFrom(other.RpcParams);
      }
      if (other.iParams_ != null) {
        if (iParams_ == null) {
          iParams_ = new global::Netgo.Library.InstantiationParams();
        }
        IParams.MergeFrom(other.IParams);
      }
      if (other.vsParams_ != null) {
        if (vsParams_ == null) {
          vsParams_ = new global::Netgo.Library.ViewSyncParams();
        }
        VsParams.MergeFrom(other.VsParams);
      }
      if (other.ceParams_ != null) {
        if (ceParams_ == null) {
          ceParams_ = new global::Netgo.Library.CustomEventParams();
        }
        CeParams.MergeFrom(other.CeParams);
      }
      if (other.smcParams_ != null) {
        if (smcParams_ == null) {
          smcParams_ = new global::Netgo.Library.SubscribeMsgChannelsParams();
        }
        SmcParams.MergeFrom(other.SmcParams);
      }
      if (other.usmcParams_ != null) {
        if (usmcParams_ == null) {
          usmcParams_ = new global::Netgo.Library.UnSubscribeMsgChannelsParams();
        }
        UsmcParams.MergeFrom(other.UsmcParams);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgType_ = (global::Netgo.Library.MessageType) input.ReadEnum();
            break;
          }
          case 18: {
            if (crParams_ == null) {
              crParams_ = new global::Netgo.Library.CreateRoomParams();
            }
            input.ReadMessage(crParams_);
            break;
          }
          case 26: {
            if (jrParams_ == null) {
              jrParams_ = new global::Netgo.Library.JoinRoomParams();
            }
            input.ReadMessage(jrParams_);
            break;
          }
          case 34: {
            if (jocrParams_ == null) {
              jocrParams_ = new global::Netgo.Library.JoinOrCreateRoomParams();
            }
            input.ReadMessage(jocrParams_);
            break;
          }
          case 42: {
            if (lrParams_ == null) {
              lrParams_ = new global::Netgo.Library.LeaveRoomParams();
            }
            input.ReadMessage(lrParams_);
            break;
          }
          case 50: {
            if (rpcParams_ == null) {
              rpcParams_ = new global::Netgo.Library.RPCParams();
            }
            input.ReadMessage(rpcParams_);
            break;
          }
          case 58: {
            if (iParams_ == null) {
              iParams_ = new global::Netgo.Library.InstantiationParams();
            }
            input.ReadMessage(iParams_);
            break;
          }
          case 66: {
            if (vsParams_ == null) {
              vsParams_ = new global::Netgo.Library.ViewSyncParams();
            }
            input.ReadMessage(vsParams_);
            break;
          }
          case 74: {
            if (ceParams_ == null) {
              ceParams_ = new global::Netgo.Library.CustomEventParams();
            }
            input.ReadMessage(ceParams_);
            break;
          }
          case 82: {
            if (smcParams_ == null) {
              smcParams_ = new global::Netgo.Library.SubscribeMsgChannelsParams();
            }
            input.ReadMessage(smcParams_);
            break;
          }
          case 90: {
            if (usmcParams_ == null) {
              usmcParams_ = new global::Netgo.Library.UnSubscribeMsgChannelsParams();
            }
            input.ReadMessage(usmcParams_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResponseSocketStatusMessage : pb::IMessage<ResponseSocketStatusMessage> {
    private static readonly pb::MessageParser<ResponseSocketStatusMessage> _parser = new pb::MessageParser<ResponseSocketStatusMessage>(() => new ResponseSocketStatusMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseSocketStatusMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseSocketStatusMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseSocketStatusMessage(ResponseSocketStatusMessage other) : this() {
      sStatus_ = other.sStatus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseSocketStatusMessage Clone() {
      return new ResponseSocketStatusMessage(this);
    }

    /// <summary>Field number for the "sStatus" field.</summary>
    public const int SStatusFieldNumber = 1;
    private global::Netgo.Library.SocketStatus sStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.SocketStatus SStatus {
      get { return sStatus_; }
      set {
        sStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseSocketStatusMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseSocketStatusMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SStatus != other.SStatus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SStatus != 0) hash ^= SStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SStatus != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseSocketStatusMessage other) {
      if (other == null) {
        return;
      }
      if (other.SStatus != 0) {
        SStatus = other.SStatus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            sStatus_ = (global::Netgo.Library.SocketStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///send from server to client
  /// </summary>
  public sealed partial class ResponseOperationMessage : pb::IMessage<ResponseOperationMessage> {
    private static readonly pb::MessageParser<ResponseOperationMessage> _parser = new pb::MessageParser<ResponseOperationMessage>(() => new ResponseOperationMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseOperationMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseOperationMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseOperationMessage(ResponseOperationMessage other) : this() {
      msgType_ = other.msgType_;
      CrrParams = other.crrParams_ != null ? other.CrrParams.Clone() : null;
      JrrParams = other.jrrParams_ != null ? other.JrrParams.Clone() : null;
      JocrrParams = other.jocrrParams_ != null ? other.JocrrParams.Clone() : null;
      LrrParams = other.lrrParams_ != null ? other.LrrParams.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseOperationMessage Clone() {
      return new ResponseOperationMessage(this);
    }

    /// <summary>Field number for the "msgType" field.</summary>
    public const int MsgTypeFieldNumber = 1;
    private global::Netgo.Library.MessageType msgType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.MessageType MsgType {
      get { return msgType_; }
      set {
        msgType_ = value;
      }
    }

    /// <summary>Field number for the "crrParams" field.</summary>
    public const int CrrParamsFieldNumber = 2;
    private global::Netgo.Library.CreateRoomResponseParams crrParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.CreateRoomResponseParams CrrParams {
      get { return crrParams_; }
      set {
        crrParams_ = value;
      }
    }

    /// <summary>Field number for the "jrrParams" field.</summary>
    public const int JrrParamsFieldNumber = 3;
    private global::Netgo.Library.JoinRoomResponseParams jrrParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.JoinRoomResponseParams JrrParams {
      get { return jrrParams_; }
      set {
        jrrParams_ = value;
      }
    }

    /// <summary>Field number for the "jocrrParams" field.</summary>
    public const int JocrrParamsFieldNumber = 4;
    private global::Netgo.Library.JoinOrCreateRoomResponseParams jocrrParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.JoinOrCreateRoomResponseParams JocrrParams {
      get { return jocrrParams_; }
      set {
        jocrrParams_ = value;
      }
    }

    /// <summary>Field number for the "lrrParams" field.</summary>
    public const int LrrParamsFieldNumber = 5;
    private global::Netgo.Library.LeaveRoomResponseParams lrrParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.LeaveRoomResponseParams LrrParams {
      get { return lrrParams_; }
      set {
        lrrParams_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseOperationMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseOperationMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgType != other.MsgType) return false;
      if (!object.Equals(CrrParams, other.CrrParams)) return false;
      if (!object.Equals(JrrParams, other.JrrParams)) return false;
      if (!object.Equals(JocrrParams, other.JocrrParams)) return false;
      if (!object.Equals(LrrParams, other.LrrParams)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgType != 0) hash ^= MsgType.GetHashCode();
      if (crrParams_ != null) hash ^= CrrParams.GetHashCode();
      if (jrrParams_ != null) hash ^= JrrParams.GetHashCode();
      if (jocrrParams_ != null) hash ^= JocrrParams.GetHashCode();
      if (lrrParams_ != null) hash ^= LrrParams.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MsgType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MsgType);
      }
      if (crrParams_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CrrParams);
      }
      if (jrrParams_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(JrrParams);
      }
      if (jocrrParams_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(JocrrParams);
      }
      if (lrrParams_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LrrParams);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MsgType);
      }
      if (crrParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CrrParams);
      }
      if (jrrParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JrrParams);
      }
      if (jocrrParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JocrrParams);
      }
      if (lrrParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LrrParams);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseOperationMessage other) {
      if (other == null) {
        return;
      }
      if (other.MsgType != 0) {
        MsgType = other.MsgType;
      }
      if (other.crrParams_ != null) {
        if (crrParams_ == null) {
          crrParams_ = new global::Netgo.Library.CreateRoomResponseParams();
        }
        CrrParams.MergeFrom(other.CrrParams);
      }
      if (other.jrrParams_ != null) {
        if (jrrParams_ == null) {
          jrrParams_ = new global::Netgo.Library.JoinRoomResponseParams();
        }
        JrrParams.MergeFrom(other.JrrParams);
      }
      if (other.jocrrParams_ != null) {
        if (jocrrParams_ == null) {
          jocrrParams_ = new global::Netgo.Library.JoinOrCreateRoomResponseParams();
        }
        JocrrParams.MergeFrom(other.JocrrParams);
      }
      if (other.lrrParams_ != null) {
        if (lrrParams_ == null) {
          lrrParams_ = new global::Netgo.Library.LeaveRoomResponseParams();
        }
        LrrParams.MergeFrom(other.LrrParams);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgType_ = (global::Netgo.Library.MessageType) input.ReadEnum();
            break;
          }
          case 18: {
            if (crrParams_ == null) {
              crrParams_ = new global::Netgo.Library.CreateRoomResponseParams();
            }
            input.ReadMessage(crrParams_);
            break;
          }
          case 26: {
            if (jrrParams_ == null) {
              jrrParams_ = new global::Netgo.Library.JoinRoomResponseParams();
            }
            input.ReadMessage(jrrParams_);
            break;
          }
          case 34: {
            if (jocrrParams_ == null) {
              jocrrParams_ = new global::Netgo.Library.JoinOrCreateRoomResponseParams();
            }
            input.ReadMessage(jocrrParams_);
            break;
          }
          case 42: {
            if (lrrParams_ == null) {
              lrrParams_ = new global::Netgo.Library.LeaveRoomResponseParams();
            }
            input.ReadMessage(lrrParams_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///need to notifiy others in the room.
  /// </summary>
  public sealed partial class ForwardMessage : pb::IMessage<ForwardMessage> {
    private static readonly pb::MessageParser<ForwardMessage> _parser = new pb::MessageParser<ForwardMessage>(() => new ForwardMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ForwardMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ForwardMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ForwardMessage(ForwardMessage other) : this() {
      msgType_ = other.msgType_;
      peerId_ = other.peerId_;
      JrfParams = other.jrfParams_ != null ? other.JrfParams.Clone() : null;
      JocrfParams = other.jocrfParams_ != null ? other.JocrfParams.Clone() : null;
      LrfParams = other.lrfParams_ != null ? other.LrfParams.Clone() : null;
      RfParams = other.rfParams_ != null ? other.RfParams.Clone() : null;
      IfParams = other.ifParams_ != null ? other.IfParams.Clone() : null;
      VsfParams = other.vsfParams_ != null ? other.VsfParams.Clone() : null;
      CeParams = other.ceParams_ != null ? other.CeParams.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ForwardMessage Clone() {
      return new ForwardMessage(this);
    }

    /// <summary>Field number for the "msgType" field.</summary>
    public const int MsgTypeFieldNumber = 1;
    private global::Netgo.Library.MessageType msgType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.MessageType MsgType {
      get { return msgType_; }
      set {
        msgType_ = value;
      }
    }

    /// <summary>Field number for the "peerId" field.</summary>
    public const int PeerIdFieldNumber = 2;
    private uint peerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PeerId {
      get { return peerId_; }
      set {
        peerId_ = value;
      }
    }

    /// <summary>Field number for the "jrfParams" field.</summary>
    public const int JrfParamsFieldNumber = 3;
    private global::Netgo.Library.JoinRoomForwardParams jrfParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.JoinRoomForwardParams JrfParams {
      get { return jrfParams_; }
      set {
        jrfParams_ = value;
      }
    }

    /// <summary>Field number for the "jocrfParams" field.</summary>
    public const int JocrfParamsFieldNumber = 4;
    private global::Netgo.Library.JoinOrCreateRoomForwardParams jocrfParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.JoinOrCreateRoomForwardParams JocrfParams {
      get { return jocrfParams_; }
      set {
        jocrfParams_ = value;
      }
    }

    /// <summary>Field number for the "lrfParams" field.</summary>
    public const int LrfParamsFieldNumber = 5;
    private global::Netgo.Library.LeaveRoomForwardParams lrfParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.LeaveRoomForwardParams LrfParams {
      get { return lrfParams_; }
      set {
        lrfParams_ = value;
      }
    }

    /// <summary>Field number for the "rfParams" field.</summary>
    public const int RfParamsFieldNumber = 6;
    private global::Netgo.Library.RPCForwardParams rfParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.RPCForwardParams RfParams {
      get { return rfParams_; }
      set {
        rfParams_ = value;
      }
    }

    /// <summary>Field number for the "ifParams" field.</summary>
    public const int IfParamsFieldNumber = 7;
    private global::Netgo.Library.InstantiationForwardParams ifParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.InstantiationForwardParams IfParams {
      get { return ifParams_; }
      set {
        ifParams_ = value;
      }
    }

    /// <summary>Field number for the "vsfParams" field.</summary>
    public const int VsfParamsFieldNumber = 8;
    private global::Netgo.Library.ViewSyncForwardParams vsfParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.ViewSyncForwardParams VsfParams {
      get { return vsfParams_; }
      set {
        vsfParams_ = value;
      }
    }

    /// <summary>Field number for the "ceParams" field.</summary>
    public const int CeParamsFieldNumber = 9;
    private global::Netgo.Library.CustomEventForwardParams ceParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.CustomEventForwardParams CeParams {
      get { return ceParams_; }
      set {
        ceParams_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ForwardMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ForwardMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgType != other.MsgType) return false;
      if (PeerId != other.PeerId) return false;
      if (!object.Equals(JrfParams, other.JrfParams)) return false;
      if (!object.Equals(JocrfParams, other.JocrfParams)) return false;
      if (!object.Equals(LrfParams, other.LrfParams)) return false;
      if (!object.Equals(RfParams, other.RfParams)) return false;
      if (!object.Equals(IfParams, other.IfParams)) return false;
      if (!object.Equals(VsfParams, other.VsfParams)) return false;
      if (!object.Equals(CeParams, other.CeParams)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgType != 0) hash ^= MsgType.GetHashCode();
      if (PeerId != 0) hash ^= PeerId.GetHashCode();
      if (jrfParams_ != null) hash ^= JrfParams.GetHashCode();
      if (jocrfParams_ != null) hash ^= JocrfParams.GetHashCode();
      if (lrfParams_ != null) hash ^= LrfParams.GetHashCode();
      if (rfParams_ != null) hash ^= RfParams.GetHashCode();
      if (ifParams_ != null) hash ^= IfParams.GetHashCode();
      if (vsfParams_ != null) hash ^= VsfParams.GetHashCode();
      if (ceParams_ != null) hash ^= CeParams.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MsgType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MsgType);
      }
      if (PeerId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PeerId);
      }
      if (jrfParams_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(JrfParams);
      }
      if (jocrfParams_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(JocrfParams);
      }
      if (lrfParams_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LrfParams);
      }
      if (rfParams_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RfParams);
      }
      if (ifParams_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(IfParams);
      }
      if (vsfParams_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(VsfParams);
      }
      if (ceParams_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(CeParams);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MsgType);
      }
      if (PeerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeerId);
      }
      if (jrfParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JrfParams);
      }
      if (jocrfParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JocrfParams);
      }
      if (lrfParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LrfParams);
      }
      if (rfParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RfParams);
      }
      if (ifParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IfParams);
      }
      if (vsfParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VsfParams);
      }
      if (ceParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CeParams);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ForwardMessage other) {
      if (other == null) {
        return;
      }
      if (other.MsgType != 0) {
        MsgType = other.MsgType;
      }
      if (other.PeerId != 0) {
        PeerId = other.PeerId;
      }
      if (other.jrfParams_ != null) {
        if (jrfParams_ == null) {
          jrfParams_ = new global::Netgo.Library.JoinRoomForwardParams();
        }
        JrfParams.MergeFrom(other.JrfParams);
      }
      if (other.jocrfParams_ != null) {
        if (jocrfParams_ == null) {
          jocrfParams_ = new global::Netgo.Library.JoinOrCreateRoomForwardParams();
        }
        JocrfParams.MergeFrom(other.JocrfParams);
      }
      if (other.lrfParams_ != null) {
        if (lrfParams_ == null) {
          lrfParams_ = new global::Netgo.Library.LeaveRoomForwardParams();
        }
        LrfParams.MergeFrom(other.LrfParams);
      }
      if (other.rfParams_ != null) {
        if (rfParams_ == null) {
          rfParams_ = new global::Netgo.Library.RPCForwardParams();
        }
        RfParams.MergeFrom(other.RfParams);
      }
      if (other.ifParams_ != null) {
        if (ifParams_ == null) {
          ifParams_ = new global::Netgo.Library.InstantiationForwardParams();
        }
        IfParams.MergeFrom(other.IfParams);
      }
      if (other.vsfParams_ != null) {
        if (vsfParams_ == null) {
          vsfParams_ = new global::Netgo.Library.ViewSyncForwardParams();
        }
        VsfParams.MergeFrom(other.VsfParams);
      }
      if (other.ceParams_ != null) {
        if (ceParams_ == null) {
          ceParams_ = new global::Netgo.Library.CustomEventForwardParams();
        }
        CeParams.MergeFrom(other.CeParams);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgType_ = (global::Netgo.Library.MessageType) input.ReadEnum();
            break;
          }
          case 16: {
            PeerId = input.ReadUInt32();
            break;
          }
          case 26: {
            if (jrfParams_ == null) {
              jrfParams_ = new global::Netgo.Library.JoinRoomForwardParams();
            }
            input.ReadMessage(jrfParams_);
            break;
          }
          case 34: {
            if (jocrfParams_ == null) {
              jocrfParams_ = new global::Netgo.Library.JoinOrCreateRoomForwardParams();
            }
            input.ReadMessage(jocrfParams_);
            break;
          }
          case 42: {
            if (lrfParams_ == null) {
              lrfParams_ = new global::Netgo.Library.LeaveRoomForwardParams();
            }
            input.ReadMessage(lrfParams_);
            break;
          }
          case 50: {
            if (rfParams_ == null) {
              rfParams_ = new global::Netgo.Library.RPCForwardParams();
            }
            input.ReadMessage(rfParams_);
            break;
          }
          case 58: {
            if (ifParams_ == null) {
              ifParams_ = new global::Netgo.Library.InstantiationForwardParams();
            }
            input.ReadMessage(ifParams_);
            break;
          }
          case 66: {
            if (vsfParams_ == null) {
              vsfParams_ = new global::Netgo.Library.ViewSyncForwardParams();
            }
            input.ReadMessage(vsfParams_);
            break;
          }
          case 74: {
            if (ceParams_ == null) {
              ceParams_ = new global::Netgo.Library.CustomEventForwardParams();
            }
            input.ReadMessage(ceParams_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///send from server to client
  /// </summary>
  public sealed partial class ReceiveMessage : pb::IMessage<ReceiveMessage> {
    private static readonly pb::MessageParser<ReceiveMessage> _parser = new pb::MessageParser<ReceiveMessage>(() => new ReceiveMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReceiveMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netgo.Library.NgMessageReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveMessage(ReceiveMessage other) : this() {
      receiveMsgType_ = other.receiveMsgType_;
      RssMsg = other.rssMsg_ != null ? other.RssMsg.Clone() : null;
      RoMsg = other.roMsg_ != null ? other.RoMsg.Clone() : null;
      FMsg = other.fMsg_ != null ? other.FMsg.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveMessage Clone() {
      return new ReceiveMessage(this);
    }

    /// <summary>Field number for the "receiveMsgType" field.</summary>
    public const int ReceiveMsgTypeFieldNumber = 1;
    private global::Netgo.Library.ReceiveMessageType receiveMsgType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.ReceiveMessageType ReceiveMsgType {
      get { return receiveMsgType_; }
      set {
        receiveMsgType_ = value;
      }
    }

    /// <summary>Field number for the "rssMsg" field.</summary>
    public const int RssMsgFieldNumber = 2;
    private global::Netgo.Library.ResponseSocketStatusMessage rssMsg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.ResponseSocketStatusMessage RssMsg {
      get { return rssMsg_; }
      set {
        rssMsg_ = value;
      }
    }

    /// <summary>Field number for the "roMsg" field.</summary>
    public const int RoMsgFieldNumber = 3;
    private global::Netgo.Library.ResponseOperationMessage roMsg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.ResponseOperationMessage RoMsg {
      get { return roMsg_; }
      set {
        roMsg_ = value;
      }
    }

    /// <summary>Field number for the "fMsg" field.</summary>
    public const int FMsgFieldNumber = 4;
    private global::Netgo.Library.ForwardMessage fMsg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Netgo.Library.ForwardMessage FMsg {
      get { return fMsg_; }
      set {
        fMsg_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReceiveMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReceiveMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReceiveMsgType != other.ReceiveMsgType) return false;
      if (!object.Equals(RssMsg, other.RssMsg)) return false;
      if (!object.Equals(RoMsg, other.RoMsg)) return false;
      if (!object.Equals(FMsg, other.FMsg)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReceiveMsgType != 0) hash ^= ReceiveMsgType.GetHashCode();
      if (rssMsg_ != null) hash ^= RssMsg.GetHashCode();
      if (roMsg_ != null) hash ^= RoMsg.GetHashCode();
      if (fMsg_ != null) hash ^= FMsg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReceiveMsgType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ReceiveMsgType);
      }
      if (rssMsg_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RssMsg);
      }
      if (roMsg_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RoMsg);
      }
      if (fMsg_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(FMsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReceiveMsgType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReceiveMsgType);
      }
      if (rssMsg_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RssMsg);
      }
      if (roMsg_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoMsg);
      }
      if (fMsg_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FMsg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReceiveMessage other) {
      if (other == null) {
        return;
      }
      if (other.ReceiveMsgType != 0) {
        ReceiveMsgType = other.ReceiveMsgType;
      }
      if (other.rssMsg_ != null) {
        if (rssMsg_ == null) {
          rssMsg_ = new global::Netgo.Library.ResponseSocketStatusMessage();
        }
        RssMsg.MergeFrom(other.RssMsg);
      }
      if (other.roMsg_ != null) {
        if (roMsg_ == null) {
          roMsg_ = new global::Netgo.Library.ResponseOperationMessage();
        }
        RoMsg.MergeFrom(other.RoMsg);
      }
      if (other.fMsg_ != null) {
        if (fMsg_ == null) {
          fMsg_ = new global::Netgo.Library.ForwardMessage();
        }
        FMsg.MergeFrom(other.FMsg);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            receiveMsgType_ = (global::Netgo.Library.ReceiveMessageType) input.ReadEnum();
            break;
          }
          case 18: {
            if (rssMsg_ == null) {
              rssMsg_ = new global::Netgo.Library.ResponseSocketStatusMessage();
            }
            input.ReadMessage(rssMsg_);
            break;
          }
          case 26: {
            if (roMsg_ == null) {
              roMsg_ = new global::Netgo.Library.ResponseOperationMessage();
            }
            input.ReadMessage(roMsg_);
            break;
          }
          case 34: {
            if (fMsg_ == null) {
              fMsg_ = new global::Netgo.Library.ForwardMessage();
            }
            input.ReadMessage(fMsg_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
